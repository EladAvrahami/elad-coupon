{"version":3,"sources":["Redux/adminState.ts","reportWebVitals.ts","Redux/CouponState.ts","Redux/CompanyState.ts","Redux/CustomerState.ts","Redux/AuthState.ts","Redux/Store.ts","reduxToolkit/LoginSlice.ts","reduxToolkit/StoreConfig.ts","Components/LayoutArea/Header/Header.tsx","Components/LayoutArea/Footer/Footer.tsx","Components/LayoutArea/Header/Login/Enums/clientType.tsx","Components/Services/Notify.ts","Components/LayoutArea/Header/Login/Login.tsx","axios/AxiosRequest.ts","Components/MainArea/AdminHome/AddCompany/AddCompany.tsx","Components/MainArea/AdminHome/AddCustomer/AddCustomer.tsx","Components/MainArea/AdminHome/DeleteCompany/DeleteCompany.tsx","Components/MainArea/AdminHome/DeleteCustomer/DeleteCustomer.tsx","Components/Companies/SingleCompany.tsx","Components/MainArea/AdminHome/GetAllCompanies/GetAllCompanies.tsx","Components/Models/CompanyData.ts","Components/MainArea/AdminHome/GetOneCompany/GetOneCompany.tsx","Components/MainArea/AdminHome/GetOneCustomer/GetOneCustomer.tsx","Components/MainArea/AdminHome/UpdateCompany/UpdateCompany.tsx","Components/MainArea/AdminHome/UpdateCustomer/UpdateCustomer.tsx","Components/MainArea/CompanyHome/AddCoupon/AddCoupon.tsx","Components/MainArea/CompanyHome/DeleteCoupon/DeleteCoupon.tsx","Components/MainArea/CompanyHome/GetCompanyCouponsByCategory/GetCompanyCouponsByCategory.tsx","Components/Coupons/SingleCoupon.tsx","Components/MainArea/CompanyHome/GetCompanyCouponsByMaxPrice/GetCompanyCouponsByMaxPrice.tsx","Components/MainArea/CompanyHome/GetCompanyDetails/GetCompanyDetails.tsx","Components/MainArea/CompanyHome/UpdateCoupon/UpdateCoupon.tsx","Components/MainArea/AdminHome/GetCompanyCoupons/GetCompanyCoupons.tsx","Components/Tables/CustomersTable/CustomersTable.js","Components/Tables/CompaniesTable/CompaniesTable.js","Components/MainArea/CustomerHome/MyPurchasedCoupons/MyPurchasedCoupons.tsx","Components/Tables/SingleCompanyTable/SingleCompanyTable.js","Components/Tables/SingleCustomerTable/SingleCustomerTable.js","Components/MainArea/AdminHome/GetCustomerCoupons/GetCustomerCoupons.tsx","Components/Models/CustomerData.ts","Components/MainArea/CustomerHome/GetCustomerDetails/GetCustomerDetails.tsx","Components/MainArea/CompanyHome/companyPage/companyPage.tsx","Components/MainArea/CustomerHome/customerPage/customerPage.tsx","Components/MainArea/AdminHome/adminPage/adminPage.tsx","Components/MainArea/HomePage/HomePage.tsx","Components/LayoutArea/Header/Logout/Logout.tsx","Components/MainArea/CustomerHome/PurchaseCoupon/CouponPurchase.tsx","CouponsCarts/Item/Item.styles.ts","CouponsCarts/Item/Item.tsx","CouponsCarts/CartItem/CartItem.styles.ts","CouponsCarts/CartItem/CartItem.tsx","CouponsCarts/Cart/Cart.styles.ts","CouponsCarts/Cart/Cart.tsx","CouponsCarts/App.styles.ts","CouponsCarts/CouponStore/couponStore.tsx","Components/Routing/Routing.tsx","Components/LayoutArea/Layout/Layout.tsx","index.tsx"],"names":["adminActionType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AdminState","company","companies","customer","customers","CouponActionType","CouponState","coupons","companiesActionType","CompanyState","coupon","CustomerActionType","CustomerState","CouponPurchase","id","type","payload","AuthActionType","AuthState","user","isLogged","storedUser","JSON","parse","localStorage","getItem","this","LoginAction","Login","reducers","combineReducers","couponState","currentState","action","newState","CouponDownloaded","CouponAdded","push","CouponUpdated","CouponDelete","filter","couponId","adminState","AddCompany","GetAllCompanies","GetCompanyCoupons","GetOneCompanyLoggedIn","companyState","AddCoupon","UpdateCoupon","GetCouponsByCategory","GetCouponsByMaxPrice","GetCompanyDetails","customerState","GetCustomerCoupons","GetCustomerCouponsByCategory","GetCustomerCouponsByMaxPrice","GetCustomerDetails","authState","Register","setItem","stringify","Logout","removeItem","store","createStore","LoginSlice","createSlice","name","initialState","email","role","clientType","authorize","state","emailValue","roleValue","unAuthorize","actions","configureStore","reducer","LoginReducer","Header","dispatch","useDispatch","history","useHistory","useSelector","getState","handleLogout","clear","ConfigureStore","className","to","onClick","Copyright","src","alt","notify","notification","Notyf","duration","position","x","y","message","success","error","err","response","data","Array","isArray","useForm","register","handleSubmit","errors","credential","a","ADMINISTRATOR","COMPANY","CUSTOMER","axios","post","console","log","decoded","jwt_decode","userInfo","sub","password","userType","token","userId","onSubmit","placeholder","ref","AxiosRequest","create","baseURL","headers","interceptors","request","use","config","authorization","Promise","reject","required","value","minLength","pattern","AddCustomer","firstName","lastName","DeleteCompany","delete","DeleteCustomer","SingleCompany","props","myCompany","Component","map","item","get","myResponse","setState","CompanyData","result","companyResult","GetOneCustomer","UpdateCompany","UpdateCustomer","companyID","category","title","description","startDate","endDate","amount","image","DeleteCoupon","GetCompanyCouponsByCategory","SingleCoupon","myCoupon","price","GetCompanyCouponsByMaxPrice","useState","setCoupons","put","validateEmail","test","String","toLowerCase","CustomerTable","setUser","iserror","setIserror","errorMessages","setErrorMessages","columns","field","button","useEffect","res","users","options","headerStyle","borderBottomColor","borderBottomWidth","fontFamily","actionsColumnIndex","editable","onRowUpdate","newData","oldData","resolve","errorList","length","updateUser","tableData","companyId","catch","handleRowUpdate","onRowAdd","newUserdata","handleRowAdd","onRowDelete","dataDelete","index","splice","handleRowDelete","Alert","severity","AlertTitle","msg","i","CompanyTable","MyPurchasedCoupons","SingleCompanyTable","customFilterAndSearch","term","rowData","SingleCustomerTable","CustomerData","myCustomer","companyPage","customerPage","adminPage","HomePage","min","Wrapper","styled","div","Item","handleAddToCart","Button","CartItem","removeFromCart","addToCart","aside","Cart","items","cartItems","reduce","ack","toFixed","StyledButton","IconButton","getProducts","fetch","json","CouponStore","cartOpen","setCartOpen","setCartItems","useQuery","isLoading","clickedItem","previous","find","LinearProgress","Drawer","anchor","open","onClose","prev","sum","Badge","badgeContent","color","Grid","container","spacing","xs","sm","Routing","path","component","exact","GetOneCompany","GetAllCustomers","CompaniesTable","CustomersTable","from","Layout","client","QueryClient","QueryClientProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.530ff09e.chunk.js","sourcesContent":["//handling Car AppState\nimport CompanyData from \"../Components/Models/CompanyData\";\nimport CustomerData from \"../Components/Models/CustomerData\"\n//Car AppState - המידע ברמת האפליקציה הקשור לרכבים - אלו בעצם יהיו כל הרכבים במערכת\nexport class AdminState{\n    public company:CompanyData ;\n    public companies:CompanyData[] = []; //אנחנו נאתחל את האובייקט הפנימי כמערך של רכבים\n    public customer:CustomerData;\n    public customers: CustomerData[] = [];\n    //מסוג קאר דאטה//זה המידע שמי שייגש למערכת יקבל את הקאר דאטה\n}\n\n//-----------------------------------------------------------------------------\n//Car Action Types - אלו הפעולות שניתן לבצע על המידע ברמת האפליקציה\n//זה האינם של הפעולות CRUD\nexport enum adminActionType{\n    AddCompany = \"AddCompany\",               //post -> create\n    DeleteCompany = \"DeleteCompany\",      //del -> delete\n    UpdateCompany=\"UpdateCompany\",          //put -> update\n    GetAllCompanies = \"GetAllCompanies\", //get  -> read \n    GetOneCompanyLoggedIn=\"GetOneCompanyLoggedIn\",//get  -> read  \n    AddCustomer = \"AddCustomer\",               //post -> create\n    UpdateCustomer=\"UpdateCustomer\",          //put -> update\n    DeletedCustomer = \"DeletedCustomer\",      //del -> delete\n    GetAllCustomers = \"GetAllCustomers\", //get  -> read \n    GetOneCustomerById=\"GetOneCustomerById\",//get  -> read \n    GetCompanyCoupons=\"GetCompanyCoupons\"\n    \n}\n\n//--------------------------------------------------------------------------------------\n//Car Action - אובייקט המכיל את המידע עבור הפעולה שאנו מבצעים על המידע ברמת האפליקציה\nexport interface AdminAction{//אומר לי מה סוג הפעולות שאנחנו רוצים להעביר אינטרפייס\n    type: adminActionType,\n    payload?: any; //it can be anything \n}\n\n//--------------------------------------------------------------------------------------------------------------------\n//Car Action Creators - ייבאתי את קופון דאטה על מנת שיוסיף אליו נתוני קופון חדשים\nexport function AddCompanyAction(company:CompanyData):AdminAction{//מביאים ךו מכוניות ואמרים שרוצים לעשות פעולה\n    return {type:adminActionType.AddCompany, payload: company}//מחזיר את הפעולה ואת הדאטה ששלחנו לו\n}\n\nexport function UpdateCompanyAction(company:CompanyData):AdminAction{//car הוא שם המשתנה יכול להיות גם משה //carData אומר לי מה הפונקציה תחזיר לי בסוף\n    return {type: adminActionType.UpdateCompany, payload: company}\n}\nexport function DeleteCompanyAction(id: number):AdminAction{\n    return{type:adminActionType.DeleteCompany,payload:id}\n}\n\nexport function GetAllCompaniesAction(companies:CompanyData[]):AdminAction{\n    return {type: adminActionType.GetAllCompanies,payload:companies}//מחזיר את הפעולה ואת הדאטה ששלחנו לו\n}\n\nexport function GetOneCompanyLoggedInAction(company:CompanyData):AdminAction{\n    return {type: adminActionType.GetOneCompanyLoggedIn, payload: company}//מחזיר את הפעולה ואת הדאטה ששלחנו לו\n}\n\nexport function GetCompanyCouponsAction(companyId : number):AdminAction{\n    return {type: adminActionType.GetCompanyCoupons, payload: companyId}//מחזיר את הפעולה ואת הדאטה ששלחנו לו\n}\n\nexport function AddCustomerAction(customer:CustomerData):AdminAction{\n    return {type: adminActionType.AddCustomer, payload: customer}//מחזיר את הפעולה ואת הדאטה ששלחנו לו\n}\n\nexport function UpdateCustomerAction(customer:CustomerData):AdminAction{//car הוא שם המשתנה יכול להיות גם משה //carData אומר לי מה הפונקציה תחזיר לי בסוף\n    return {type: adminActionType.UpdateCustomer, payload: customer}\n}\n\nexport function DeleteCustomerAction(id: number):AdminAction{\n    return{type:adminActionType.DeletedCustomer,payload:id}\n}\n\nexport function GetAllCustomersAction(customers:CustomerData[]):AdminAction{\n    return {type: adminActionType.GetAllCustomers,payload:customers}//מחזיר את הפעולה ואת הדאטה ששלחנו לו\n}\n\nexport function GetOneCustomerByIdAction(customer: CustomerData):AdminAction{\n    return {type: adminActionType.GetOneCustomerById, payload: customer}//מחזיר את הפעולה ואת הדאטה ששלחנו לו\n}\n\n\n//------------------------------------------------------------------------------------------------\n//Car Reducer - פונקציה המבצעת את הפעולה בפועל\n                                // איתחול הפעולה פעםאחת בלבד //      tell where the action take from \nexport function adminReducer(currentState: AdminState = new AdminState(), action:AdminAction):AdminState{//חתימה קבוע לא לשנות !!! פונקציה המחזירה לבסוף קארסטייט כלשהו\n   \n    const newState = {...currentState} //Spread Operator - שכפול אובייקט \n    switch(action.type){   \n        case adminActionType.AddCompany:\n        newState.company = action.payload;\n            break;\n    \n        case adminActionType.GetAllCompanies:\n        newState.companies= action.payload;\n        break;\n\n        case adminActionType.GetCompanyCoupons:\n        newState.company=action.payload;\n        break;\n\n        case adminActionType.GetOneCompanyLoggedIn:\n            newState.company=action.payload;\n        \n/*\ncase companiesActionType.DeletedCoupon:\n            newState.coupon.filter(coupon=> coupon.couponId !== action.payload.couponId\n                );\n            break;\n        case companiesActionType.GetCompanyCoupons:\n            newState.coupon=action.payload\n            break;\n\n        case companiesActionType.UpdateCoupon:\n            newState.coupon=action.payload\n            break;\n\n        case companiesActionType.GetCouponsByCategory:\n                newState.coupon=action.payload\n                break;\n        case companiesActionType.GetCouponsByMaxPrice:\n                    newState.coupon=action.payload\n                    break;\n    }\n    */\n}\n    return newState;//לאחר שמצא איזו פעולה לעשות בהתאם לארגומנטים שנשלחו אליו יחזיר את המצב החדש לאחר שינויים\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import CouponData from \"../Components/Models/CouponData\";\n\n\nexport class CouponState{\n    public coupons:CouponData[] = [];\n}\n\nexport enum CouponActionType{\n    CouponDownloaded=\"CouponDownloaded\",\n    CouponAdded = \"CouponAdded\",\n    CouponUpdated = \"CouponUpdated\",\n    CouponDelete = \"CouponDelete\"\n}\n\nexport interface CouponAction{\n    type:CouponActionType;\n    payload?: any;\n}\n\nexport function couponDownloadedAction(coupons: CouponData[]):CouponAction{\n    return {type: CouponActionType.CouponDownloaded, payload:coupons}\n}\n\nexport function couponAddedAction(coupon: CouponData):CouponAction{\n    return {type: CouponActionType.CouponAdded, payload:coupon}\n}\n\nexport function couponUpdateAction(coupon: CouponData):CouponAction{\n    return {type: CouponActionType.CouponUpdated, payload:coupon}\n}\n\nexport function couponDeleteAction(id:number):CouponAction{\n    return {type: CouponActionType.CouponDelete, payload:id}\n}\n\n\n//reducer\nexport function couponReducer(currentState: CouponState = new CouponState, action:CouponAction):CouponState{\n    const newState = {...currentState};\n\n    switch(action.type){\n        case CouponActionType.CouponDownloaded:\n            newState.coupons = action.payload;\n            break;\n\n        case CouponActionType.CouponAdded:\n            newState.coupons.push(action.payload);\n            break;\n\n        case CouponActionType.CouponUpdated:\n            \n        //     coupons: {\n        //         newState.coupons,     \n        //         newState.coupons.map(item => {\n        //         if (item.couponId === action.payload.couponId) {\n        //           return { ...item, status: 'in' };\n        //         }\n        //         return item;\n        //     }\n        //   )}\n        //   break;\n        case CouponActionType.CouponDelete:\n             newState.coupons.filter(coupon=> coupon.id !== action.payload.couponId\n                );\n            break;\n    }\n    return newState;\n}","\n//handling Car AppState\n\nimport CompanyData from \"../Components/Models/CompanyData\";\nimport CouponData from \"../Components/Models/CouponData\";\n\n//Car AppState - המידע ברמת האפליקציה הקשור לרכבים - אלו בעצם יהיו כל הרכבים במערכת\nexport class CompanyState{\n    public coupon:CouponData ;\n    public companies:CompanyData[]; //אנחנו נאתחל את האובייקט הפנימי כמערך של רכבים\n    //מסוג קאר דאטה//זה המידע שמי שייגש למערכת יקבל את הקאר דאטה\n}\n\n//-----------------------------------------------------------------------------\n//Car Action Types - אלו הפעולות שניתן לבצע על המידע ברמת האפליקציה\n//זה האינם של הפעולות CRUD\nexport enum companiesActionType{\n    AddCoupon = \"AddCoupon\",               //post -> create\n    DeletedCoupon = \"DeletedCoupon\",      //del -> delete\n    UpdateCoupon=\"UpdateCoupon\",          //put -> update\n    GetCompanyCoupons = \"GetCompanyCoupons\", //get  -> read \n    GetCouponsByCategory=\"GetCouponsByCategory\",//get  -> read \n    GetCouponsByMaxPrice=\"GetCouponsByMaxPrice\", //get  -> read  \n    GetCompanyDetails=\"GetCompanyDetails\"\n}\n\n//--------------------------------------------------------------------------------------\n//Car Action - אובייקט המכיל את המידע עבור הפעולה שאנו מבצעים על המידע ברמת האפליקציה\nexport interface CompanyAction{//אומר לי מה סוג הפעולות שאנחנו רוצים להעביר אינטרפייס\n    type: companiesActionType,\n    payload?: any; //it can be anything \n}\n\n//--------------------------------------------------------------------------------------------------------------------\n//Car Action Creators - ייבאתי את קופון דאטה על מנת שיוסיף אליו נתוני קופון חדשים\nexport function AddCouponAction(coupon: CouponData[],company:CompanyData):CompanyAction{//מביאים לו מכוניות ואמרים שרוצים לעשות פעולה\n    return {type:companiesActionType.AddCoupon, payload: coupon}//מחזיר את הפעולה ואת הדאטה ששלחנו לו\n}\n\nexport function DeletedCoupon(id: number):CompanyAction{\n    return{type:companiesActionType.DeletedCoupon,payload:id}\n}\n\nexport function CouponUpdateAction(coupon: CouponData[]):CompanyAction{//car הוא שם המשתנה יכול להיות גם משה //carData אומר לי מה הפונקציה תחזיר לי בסוף\n    return {type: companiesActionType.UpdateCoupon, payload: coupon}\n}\n\nexport function GetCompanyCoupons(coupons: CouponData[]):CompanyAction{\n    return {type: companiesActionType.GetCompanyCoupons, payload: coupons}//מחזיר את הפעולה ואת הדאטה ששלחנו לו\n}\n\nexport function GetCouponsByCategory(categoryId:number):CompanyAction{\n    return {type: companiesActionType.GetCouponsByCategory, payload: categoryId}//מחזיר את הפעולה ואת הדאטה ששלחנו לו\n}\nexport function GetCouponsByMaxPrice(maxPrice:number):CompanyAction{\n    return {type: companiesActionType.GetCouponsByMaxPrice, payload: maxPrice}//מחזיר את הפעולה ואת הדאטה ששלחנו לו\n}\nexport function GetCompanyDetails():CompanyAction{\n    return{type:companiesActionType.GetCompanyDetails,}\n}\n\n\n//------------------------------------------------------------------------------------------------\n//Car Reducer - פונקציה המבצעת את הפעולה בפועל\n                                // איתחול הפעולה פעםאחת בלבד //      tell where the action take from \nexport function companyReducer(currentState: CompanyState = new CompanyState(), action:CompanyAction):CompanyState{//חתימה קבוע לא לשנות !!! פונקציה המחזירה לבסוף קארסטייט כלשהו\n   \n    const newState = {...currentState} //Spread Operator - שכפול אובייקט \n    switch(action.type){   \n        case companiesActionType.AddCoupon:\n        newState.coupon = action.payload;\n            break;\n/*\n        case companiesActionType.DeletedCoupon:\n            newState.coupon.filter(coupon=> coupon.couponId !== action.payload.couponId\n                );\n            break;\n*/\n        case companiesActionType.GetCompanyCoupons:\n            newState.coupon=action.payload\n            break;\n\n        case companiesActionType.UpdateCoupon:\n            newState.coupon=action.payload\n            break;\n\n        case companiesActionType.GetCouponsByCategory:\n                newState.coupon=action.payload\n                break;\n        case companiesActionType.GetCouponsByMaxPrice:\n                    newState.coupon=action.payload\n                    break;\n        case companiesActionType.GetCompanyDetails:\n                newState.companies=action.payload\n                break;            \n    }\n    return newState;//לאחר שמצא איזו פעולה לעשות בהתאם לארגומנטים שנשלחו אליו יחזיר את המצב החדש לאחר שינויים\n}","import CouponData from \"../Components/Models/CouponData\";\nimport CustomerData from \"../Components/Models/CustomerData\";\n\n\nexport class CustomerState{\n    public customer:CustomerData;\n    public coupons:CouponData[] = [];\n}\n\nexport enum CustomerActionType{\n    GetCustomerCoupons=\"GetCustomerCoupons\",\n    PurchaseCoupon = \"PurchaseCoupon\",\n    GetCustomerCouponsByCategory = \"GetCustomerCouponsByCategory\",\n    GetCustomerCouponsByMaxPrice = \"GetCustomerCouponsByMaxPrice\",\n    GetCustomerDetails = \"GetCustomerDetails\",\n    CouponPurchase = \"CouponPurchase\"\n}\n//GetCustomerDetails\nexport interface CustomerAction{\n    type:CustomerActionType;\n    payload?: any;\n}\n\nexport function GetCustomerCoupons(coupons:CouponData):CustomerAction{\n    return {type: CustomerActionType.GetCustomerCoupons, payload:coupons}\n}\n\nexport function CouponPurchase(id: number):CustomerAction{\n    return {type: CustomerActionType.CouponPurchase, payload:id}\n}\n\nexport function GetCustomerCouponsByCategory(coupons: CouponData):CustomerAction{\n    return {type: CustomerActionType.GetCustomerCouponsByCategory, payload:coupons}\n}\n\nexport function GetCustomerCouponsByMaxPrice(coupons: CouponData):CustomerAction{\n    return {type: CustomerActionType.GetCustomerCouponsByMaxPrice, payload:coupons}\n}\n\nexport function GetCustomerDetails():CustomerAction{\n    return {type: CustomerActionType.GetCustomerDetails, }\n}\n\n\n//reducer\nexport function customerReducer(currentState: CustomerState = new CustomerState, action:CustomerAction):CustomerState{\n    const newState = {...currentState};\n\n    switch(action.type){\n        case CustomerActionType.GetCustomerCoupons:\n            newState.customer.coupons = action.payload;\n            break;\n\n        case CustomerActionType.CouponPurchase:\n            newState.customer.coupons.push(action.payload);\n            break;\n\n        case CustomerActionType.GetCustomerCouponsByCategory:\n            newState.customer.coupons = action.payload;\n          break;\n\n        case CustomerActionType.GetCustomerCouponsByMaxPrice:\n            newState.customer.coupons = action.payload;\n            break;\n\n        case CustomerActionType.GetCustomerDetails:\n               newState.customer = action.payload;\n               break;\n\n    }\n    return newState;\n}","import CredentialsModel from \"../Components/Models/CredentialsModel\";\nimport UserModel from \"../Components/Models/UserModel\";\nimport jwt_decode from \"jwt-decode\"\n\n\n//auth state\nexport class AuthState{\n    public user:UserModel = null;\n    public isLogged:boolean;\n    public constructor(){\n        const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n        if (storedUser) {this.user = storedUser}\n    }\n}\n//auth action types\nexport enum AuthActionType{\n    Register=\"Register\",\n    Login=\"Login\",\n    Logout = \"Logout\"\n}\n//auth action\nexport interface AuthAction{\n    type:AuthActionType,\n    payload? : any\n}\n//auth action creators\nexport function RegisterAction(user: UserModel):AuthAction{\n    return {type: AuthActionType.Register, payload:user}\n}\nexport  function LoginAction(user:UserModel):AuthAction{\n    return {type:AuthActionType.Login, payload:user}\n}\nexport  function LogoutAction():AuthAction{\n    return {type: AuthActionType.Logout}\n}\n\n//auth reducer\nexport function authReducer(currentState: AuthState = new AuthState(), action: AuthAction):AuthState{\n    const newState = {...currentState}; //spread operator = שכפול אובייקט לאובייקט חדש\n    switch(action.type){\n        case AuthActionType.Register:\n\n            //here the payload is the registered user sent from the server\n            //we deleted the newStateUser and AuthAction , since we combine it\n        case AuthActionType.Login:\n            //need to install npm install jwt-decode\n            // var decoded = JSON.parse(jwt_decode(action.payload));        \n            //newState.user.userId = decoded.id;\n           // newState.user.token = action.payload;\n          //  newState.user.email = decoded.sub;\n            //here is the payload is the logged in user sent from the server\n            newState.user = action.payload; \n            newState.isLogged=true;\n            //saving in the local storage (won't be deleted)\n            localStorage.setItem(\"user\",JSON.stringify(newState.user));\n            break;\n        case AuthActionType.Logout:\n            newState.user = null;\n            newState.isLogged=false;\n            localStorage.removeItem(\"user\")\n    }\n    return newState;\n}\nexport default AuthState;","import { combineReducers, createStore } from \"redux\";\nimport {adminReducer} from \"./adminState\"\nimport {couponReducer} from \"./CouponState\" \nimport {companyReducer} from \"./CompanyState\"\nimport {customerReducer} from \"./CustomerState\"\nimport {authReducer} from \"./AuthState\"\n\nconst reducers = combineReducers({\n    couponState:couponReducer,\n    adminState:adminReducer,\n    companyState:companyReducer,\n    customerState:customerReducer,\n    authState:authReducer\n});\n\nconst store = createStore(reducers);\n\nexport default store;","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const LoginSlice = createSlice({\n    name: \"LoginSlice\",\n    initialState: {\n        //email: localStorage.getItem(\"Username\") !== null ? localStorage.getItem(\"Username\") : '',\n        email: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")).email : '',\n        //role: localStorage.getItem(\"Role\") !== null ? localStorage.getItem(\"Role\") : '',\n        role: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")).clientType : '',\n    },\n    reducers: {\n        /*כניסה */\n        authorize: (state, action) => {\n            const { emailValue, roleValue } = action.payload;\n            state.email = emailValue;\n            state.role = roleValue;\n        },\n         /* בעצם מחזיר לסטייט של לוגין סלייס שדות ריקים -יציאה  */\n        unAuthorize: (state) => {\n            state.email = '';\n            state.role = '';\n        },\n    }\n});\n\nexport const {\n    authorize,\n    unAuthorize\n} = LoginSlice.actions;\n\nexport default LoginSlice.reducer;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport LoginReducer from \"./LoginSlice\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        LoginSlice: LoginReducer,\r\n    }\r\n});","import { Link,NavLink, useHistory } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\nimport {useEffect, useState} from \"react\";\r\nimport store from \"../../../Redux/Store\";\r\nimport {UserInterface} from \"../../../interfaces/UserInterface\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\nimport ConfigureStore from \"../../../reduxToolkit/StoreConfig\";\r\nimport Logout from \"./Logout/Logout\";\r\nimport {unAuthorize} from \"../../../reduxToolkit/LoginSlice\";\r\n\r\nfunction Header():JSX.Element{\r\n    const dispatch = useDispatch();\r\n\r\n    var history = useHistory();\r\n    useSelector(store.getState);\r\n    //  const result:any = useSelector(()=> store.getState().authState.isLogged)\r\n    const isLogged = () =>{ if(store.getState().authState.isLogged){\r\n\r\n      return <NavLink exact to=\"/Logout\">Logout</NavLink>;\r\n\r\n    } else{\r\n      return <NavLink exact to=\"/Login\">Login</NavLink>\r\n    }\r\n    }\r\n    var Login = ()=>{\r\n        history.push(\"/Login\");\r\n    }\r\n\r\n\r\n    const handleLogout = () => {\r\n     dispatch(unAuthorize());\r\n     localStorage.clear();\r\n     history.push(\"/HomePage\")\r\n    }\r\n\r\n    // const [clientType] = useState(store.getState().authState.user.clientType) //taken from Aside.tsx line 10\r\n    // const [clientType] = useState(localStorage.getItem(\"user\")) // maybe you can use just this instead?\r\n    const { email, role } = useSelector((state) => ConfigureStore.getState().LoginSlice);\r\n\r\n    return(\r\n        <div className=\"Header py-3 shadow-sm\">\r\n            <Link to=\"/\">  {/* הוספת לינק שיפנה למסך הבית בלחיצה על לוגו */}\r\n            <h3 className=\"font-weight-bold text-primary mx-1\">Coupon System</h3>\r\n            </Link>\r\n\r\n            <div className=\"InHeader d-flex shadow-sm\">\r\n\r\n                {/*תפריט אורח  */}\r\n                {role === '' && <div className=\"inHeader ml-auto d-flex mr-3\"  >\r\n                  {/*onClick={Login}*/}\r\n                  <Link to=\"/Login\">\r\n                    <button className=\" button btn btn-primary btn-s mx-1 \"  >Login</button>\r\n                    </Link>\r\n                   \r\n                  <Link  to=\"/CouponStore\">\r\n                    <button className=\"button btn btn-primary btn-s mx-1 margin-right: 30px \" >Check our coupons!</button>\r\n                    </Link>\r\n                </div>}\r\n\r\n                {role === 'admin' && <div className=\"inHeader ml-auto d-flex mr-3\">\r\n                    <Link  to=\"/GetCustomerCoupons/\">\r\n                    <button className=\"btn btn-primary btn-xs mx-2\">Customer coupons</button>\r\n                    </Link>\r\n                    <Link  to=\"/GetCompanyCoupons/\">\r\n                    <button className=\"btn btn-primary btn-xs ms-2\">Company coupons</button>\r\n                    </Link>\r\n                    <Link  to=\"/CustomersTable\">\r\n                    <button className=\"btn btn-primary btn-xs ms-2 \">Manage customers</button>\r\n                    </Link>\r\n                    <Link  to=\"/CompaniesTable\">\r\n                    <button className=\"btn btn-primary btn-xs ms-2 \">Manage companies</button>\r\n                    </Link>\r\n                    <Link  to=\"/CouponStore\">\r\n                    <button className=\"btn btn-primary btn-s mx-1 \" onClick={ handleLogout }>Logout</button>\r\n                    </Link>\r\n                <div>\r\n                {/* <button className=\"btn btn-primary btn-s mx-1 \" onClick={Logout}>Logout</button> */}\r\n                 </div>\r\n                </div>}\r\n\r\n                {role === 'company' && <div className=\"inHeader ml-auto d-flex mr-3\">\r\n                <Link  to=\"/GetCompanyDetails\">\r\n                  <button className=\"btn btn-primary btn-xs mx-5\">Company details</button>\r\n                </Link>\r\n                <Link  to=\"/SingleCompanyTable\">\r\n                  <button className=\"btn btn-primary btn-xs mx-5\">Coupons management</button>\r\n                </Link>\r\n                <Link  to=\"/\">\r\n                    <button className=\"btn btn-primary btn-s mx-1 \" onClick={ handleLogout }>Logout</button>\r\n                    </Link>\r\n                <div>\r\n                 {/* <button className=\"btn btn-primary btn-s mx-1 \" onClick={Logout}>Logout</button> */}\r\n                  {/* <NavLink exact to=\"/Logout\">Logout</NavLink> */}\r\n                 </div>\r\n                </div>}\r\n\r\n                {role === 'customer' && <div className=\"inHeader ml-auto d-flex mr-3\">\r\n                    \r\n                <Link  to=\"/CouponPurchase\">\r\n                    <button className=\"btn btn-primary btn-s mx-1 \" >Purchase coupons</button>\r\n                    </Link>\r\n                    \r\n                    <Link  to=\"/GetCustomerDetails\">\r\n                    <button className=\"btn btn-primary btn-s mx-1 \" >My details</button>\r\n                    </Link>.\r\n                    <Link  to=\"/SingleCustomerTable/\">\r\n                    <button className=\"btn btn-primary btn-s mx-1 \" >My coupons</button>\r\n                    </Link>\r\n                    <Link  to=\"/CouponStore\">\r\n                    <button className=\"btn btn-primary btn-s mx-1 \" >show coupons</button>\r\n                    </Link>\r\n                    <Link  to=\"/HomePage\">\r\n                    <button className=\"btn btn-primary btn-s mx-1 \" onClick={ handleLogout }>Logout</button>\r\n                    </Link>\r\n                    <div>\r\n\r\n                 {/* <button className=\"btn btn-primary btn-s mx-1 \" onClick={Logout}>Logout</button> */}\r\n                 </div>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import \"./Footer.css\"\n\nfunction Copyright():JSX.Element{\n    return(\n      <div className=\"footer\">\n      <div className=\" footer-container\">\n        <div className=\"row no-gutters\">\n          <div className=\"col-12 col-md-6 col-lg-6 d-flex\">\n            <div className=\"footer-item\">\n              <p className=\"footer-header\">Get to Know Us</p>\n              <ul className=\"footer-ul\">\n                <li className=\"footer-li\">About elad  <img src=\"\" alt=\"\" /> </li>\n                <li className=\"footer-li\">About chen</li>\n                <li className=\"footer-li\">About david </li>\n              </ul>\n            </div>\n            \n            <div className=\"footer-item\">\n              <p className=\"footer-header\">Doing Business</p>\n              <ul className=\"footer-ul\">\n                <li className=\"footer-li\">About us</li>\n                <li className=\"footer-li\">Let us help you</li>\n                <li className=\"footer-li\">Doing Business</li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"col-12 col-md-6 col-lg-6\">\n            <div className=\"footer-store\">\n              <img\n                src=\"./assets/app_store.png\"\n                className=\"app-store-logo\"\n                alt=\"\"\n              />\n              <img\n                src=\"./assets/google_store.png\"\n                className=\"app-store-logo\"\n                alt=\"\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n\n\n\n\n        // <div className=\"copyright\">\n            \n\n        //     <br />\n        //     &copy;All rights reserved to \"coupons 'r' us\" Ltd.\n        \n        // </div>\n       \n    );\n}\n\nexport default Copyright;"," enum clientType{\n\n   ADMINISTRATOR=\"admin\",\n   COMPANY=\"company\",\n   CUSTOMER=\"customer\",\n   GUEST=\"guest\"\n}\nexport default clientType;","import {Notyf} from \"notyf\";\nimport { duration } from \"@material-ui/core\";\n\nclass Notify{\n    private notification = new Notyf({duration: 2_000, position:{x: \"left\" ,y:\"top\"}});\n\n    public success(message:string){\n        this.notification.success(message)\n    }\n\n    public error(message:string){\n        this.notification.error(message)\n    }\n\n    private extractMessage(err:any):string{\n        if (typeof err === \"string\"){\n            return err;\n        }\n        if (typeof err?.response?.data === \"string\"){\n            return err.response.data[0];\n        }\n        if (Array.isArray(err?.response?.data)){\n            return err.response.data[0];\n        }\n        //must be last\n        if (typeof err?.message === \"string\"){\n            return err.message;\n        }\n        return \"Ohi Ohi Ohi\";\n    }\n}\n\nconst notify = new Notify();\n\nexport default notify;","import { Avatar, Button, ButtonGroup, Checkbox, Grid, InputLabel, NativeSelect, Paper, TextField, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport CredentialsModel from \"../../../Models/CredentialsModel\";\nimport notify from \"../../../Services/Notify\";\nimport \"./Login.css\";\nimport { Player, Controls } from '@lottiefiles/react-lottie-player';\nimport { LoginAction } from \"../../../../Redux/AuthState\"\nimport store from \"../../../../Redux/Store\"\nimport clientType from \"./Enums/clientType\";\nimport UserModel from \"../../../Models/UserModel\";\nimport jwt_decode from \"jwt-decode\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {authorize} from \"../../../../reduxToolkit/LoginSlice\";\n\nconst paperStyle = { padding: '30px 20px', width: '30%', margin: '5% auto' }\n//const AvatarStyle={align:'center'}\nfunction Login(): JSX.Element {\n const { register, handleSubmit, errors } = useForm<CredentialsModel>();\n    //for sending the browser to specific location \n    const history = useHistory();\n\n    const dispatch = useDispatch();\n\n    async function send(credential: CredentialsModel) {\n        switch (credential.clientType){\n\n            case clientType.ADMINISTRATOR:\n                try{\n                    const response = await axios.post<string>(\"/coupons/adminLogin\",credential);\n                    console.log(response.data);\n                    const decoded =JSON.parse(JSON.stringify( jwt_decode(response.data)));\n                    const userInfo = {email:decoded.sub,password:\"\",clientType:decoded.userType, token:response.data,userId:decoded.id,name:decoded.name}\n                    store.dispatch(LoginAction(userInfo));\n                    console.log(\"our user in redux\")\n                    console.log(store.getState().authState.user);\n                    notify.success(\"Admin login successful!\");\n                    history.push(\"/adminPage\");\n\n                    dispatch(authorize({\n                        emailValue: JSON.parse(localStorage.getItem(\"user\")).email,\n                        roleValue: JSON.parse(localStorage.getItem(\"user\")).clientType\n                    }))\n\n                }catch(err){\n                    notify.error(\"Login failed. You either typed wrong details, or this account does not exist.\");\n                    console.log(err);\n                }     \n        break;\n\n        case clientType.COMPANY:\n        try {\n            const response = await axios.post<string>(\"/coupons/companyLogin\",credential);\n            console.log(response.data);\n            const decoded =JSON.parse(JSON.stringify( jwt_decode(response.data)));\n            const userInfo = {email:decoded.sub,password:\"\",clientType:decoded.userType, token:response.data,userId:decoded.id,name:decoded.name}\n            store.dispatch(LoginAction(userInfo));\n            console.log(userInfo);\n            notify.success(\"Company login successful!\");\n            history.push(\"/companyPage\");\n\n            dispatch(authorize({\n                emailValue: JSON.parse(localStorage.getItem(\"user\")).email,\n                roleValue: JSON.parse(localStorage.getItem(\"user\")).clientType\n            }))\n\n        } catch {\n            notify.error(\"Login failed. You either typed wrong details, or this account does not exist\");\n        }\n        break;\n\n        case clientType.CUSTOMER:\n        try {\n            const response = await axios.post<string>(\"/coupons/customerLogin\",credential);\n            console.log(response);\n            const decoded =JSON.parse(JSON.stringify( jwt_decode(response.data)));\n            const userInfo = {email:decoded.sub,password:\"\",clientType:decoded.userType, token:response.data,userId:decoded.id,name:decoded.name}\n            store.dispatch(LoginAction(userInfo));\n            notify.success(\"Customer login successful!\");\n            history.push(\"/customerPage\");\n\n            dispatch(authorize({\n                emailValue: JSON.parse(localStorage.getItem(\"user\")).email,\n                roleValue: JSON.parse(localStorage.getItem(\"user\")).clientType\n            }))\n\n        } catch {\n            notify.error(\"Login failed. You either typed wrong details, or this account does not exist\");\n        }\n        break;\n\n        default:\n            history.push(\"/HomePage\");\n            break;\n        \n    }\n    }\n    return (\n        <div className=\"Login Box\">\n        <h2>LOGIN</h2>\n        <form onSubmit={handleSubmit(send)}>\n            <input type=\"email\" name=\"email\" placeholder=\"Email\" ref={register({\n                // required: {value:true , message:\"Missing email\"},\n                // minLength: {value:10 , message:\"Minimum length is 10 chars\"}\n            })}/>\n            <span><br/>{errors.email?.message}</span>\n            <br/><br/>\n            <input type=\"password\" name=\"password\" placeholder=\"Password\" ref={register(\n                // {required:true, minLength:3, pattern: /^[A-Z].+$/}\n            )}/>\n            {/* {errors.password?.type===\"minLength\" && <span><br/>Must have 3 letters</span>}\n            {errors.password?.type===\"required\" && <span><br/>You must enter a name</span>}\n            {errors.password?.type===\"pattern\" && <span><br/>You must start with capital letter</span>} */}\n            <br/><br/>\n            <input type=\"clientType\" name=\"clientType\" placeholder=\"ClientType\" ref={register({\n            // required:{value: true, message: \"Missing password\"},\n            // minLength: {value:8, message: \"Minimum length is 8 chars\"}\n            })}/>\n            {/* <span><br/>{errors.password?.message}</span> */}\n            <br/><br/>\n            <button>LOGIN</button>\n        </form>\n    </div>\n        // <Grid>\n        //     <Paper elevation={20} style={paperStyle}>\n        //         <Grid>\n        //             <Player\n        //                 autoplay\n        //                 loop\n        //                 src=\"https://assets5.lottiefiles.com/packages/lf20_1simvuvy.json\"\n        //                 style={{ height: '40%', width: '40%', margin: '-12% auto' }}\n        //             >\n        //                 <Controls visible={false} buttons={['play', 'repeat', 'frame', 'debug']} />\n        //             </Player>\n        //            {/* <Avatar style={{ margin: '1% auto', backgroundColor: '#0e7ebe' }}></Avatar> */}\n        //               {/*  <LockOpenOutlinedIcon />*/}\n        //             {/*  </Avatar> */}\n        //             <h1 style={{ margin: 0, fontSize: 40 }}>Login</h1>\n        //             <Typography>  Please fill your details in order to get in  (: </Typography>\n        //         </Grid>\n        //         <form onSubmit={handleSubmit(send)}>\n\n        //             <TextField size=\"medium\" fullWidth label=\"Email\" placeholder=\"Please enter your email\" type=\"email\" name=\"email\" required />\n        //             {register({\n        //                 required: { value: true, message: \"Missing email\" },\n        //                 minLength: { value: 10, message: \"Minimum length is 10 chars\" }\n        //             })}\n        //             <br />\n        //             <br />\n        //             <TextField size=\"medium\" fullWidth label=\"Password\" placeholder=\"Please enter your password\" type=\"text\" name=\"password\" required />\n        //             <br />\n        //             <br />\n        //             <InputLabel htmlFor=\"select\"> choose client type</InputLabel>\n        //             <NativeSelect fullWidth id=\"select\" style={{ fontSize: 20, backgroundColor: '0e7ebe' }}>\n        //                 <option value=\"customer\">Customer</option>\n        //                 <option value=\"company\">Company</option>\n        //                 <option value=\"admin\">Admin</option>\n        //             </NativeSelect>\n        //             <br />\n        //             <br />\n        //             <ButtonGroup variant=\"contained\" fullWidth>\n        //                 <Button color=\"primary\" type=\"submit\">Send</Button>\n        //                 <Button color=\"default\" type=\"reset\">Cancel</Button>\n        //             </ButtonGroup>\n        //         </form>\n\n        //     </Paper>\n\n\n\n\n        // </Grid>\n\n    );\n                \n                }               \n\nexport default Login;","import axios from 'axios';\nimport {UserInterface} from \"../interfaces/UserInterface\";\n\n// const userInfo: UserInterface = JSON.parse(localStorage.getItem(\"user\"));\n\nconst AxiosRequest = axios.create({\n    baseURL: \"\",\n    headers: {\"Content-Type\": \"application/json\"}\n});\n\nexport default AxiosRequest;\n\nAxiosRequest.interceptors.request.use(\n    (config) => {\n        const token = (JSON.parse(localStorage.getItem(\"user\")) as UserInterface).token;\n        if (token) config.headers.authorization = token;\n        return config;\n    },\n    (error) => Promise.reject(error),\n\n);","import axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport CompanyData from \"../../../Models/CompanyData\";\nimport notify from \"../../../Services/Notify\";\nimport \"./AddCompany.css\";\nimport { Avatar, Button, ButtonGroup, Checkbox, Grid, InputLabel, NativeSelect, Paper, TextField, Typography } from \"@material-ui/core\";\nimport AxiosRequest from \"../../../../axios/AxiosRequest\";\n\nconst paperStyle = { padding: '30px 20px', width: '30%', margin: '5% auto' }\nfunction AddCompany(): JSX.Element {\n    const {register, handleSubmit, errors} = useForm<CompanyData>();\n    //for sending the browser to specific location \n    const history = useHistory();\n\n    async function send(company:CompanyData){\n        try{\n            //lecturer is in json mode, ready to send.....      \n            // const response = await axios.post<CompanyData>(\"/coupons/createcompany\",company);\n            const response = await AxiosRequest.post<CompanyData>(\"/coupons/addCompany\",company); //the link was wrong\n            console.log(response);\n            notify.success(\"The company was successfully added.\");\n        } catch {\n            notify.error(\"The company was NOT added.\")\n        }\n    }\n\n    \n    return (\n/*\n        <div className=\"AddNewCompany\">\n        <Grid>\n        <Paper elevation={20} style={paperStyle}>\n            <Grid>\n               \n                <h2 style={{ margin: 0, fontSize: 40 }}>Add new Company </h2>\n                <Typography>  please fill details in order add new Company (: </Typography>\n            </Grid>\n            <form onSubmit={handleSubmit(send)}>\n                <br />\n                {/*להשתמש באינפוט לייבל במקום טקסט פילד על מנת לעשות הודעות שגיאה מתאימות  *///}\n                  //  {/* https://material-ui.com/api/input-label/#main-content*/}\n\n               /* <TextField size=\"medium\" fullWidth label=\"company's name\" placeholder=\"please enter company's name\" type=\"text\" name=\"name\" required inputRef={register(\n                    {required:{value:false , message:\"Missing name\"}})}\n                  \n               />\n                <TextField size=\"medium\" fullWidth label=\"Email\" placeholder=\"please enter company's email\" type=\"email\" name =\"email\" required  inputRef={register(\n                    { minLength:3, pattern: /^[A-Z].+$/}\n                )} />\n                <TextField size=\"medium\" fullWidth label=\"Password\" placeholder=\"please enter company's password\" type=\"text\" name =\"password\" required />\n                <br /><br />\n                <ButtonGroup variant=\"contained\" fullWidth>\n                    <Button color=\"primary\" type=\"submit\">Send</Button>\n                    <Button color=\"default\" type=\"reset\">Cancel</Button>\n                </ButtonGroup>\n\n\n            </form>\n\n        </Paper>\n    </Grid>\n        \n    </div>*/\n\n       \n\n        <div className=\"AddCompany Box\">\n\t\t\t<h2>Add Company</h2>\n            <form onSubmit={handleSubmit(send)}>\n                <input type=\"text\" name=\"email\" placeholder=\"Company's email\" ref={register({\n                    required: {value:true , message:\"Missing email\"},\n                    minLength: {value:10 , message:\"Minimum length is 10 chars\"}\n                })}/>\n                <span><br/>{errors.email?.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"name\" placeholder=\"Company's name\" ref={register(\n                    {required:true, minLength:3, pattern: /^[A-Z].+$/}\n                )}/>\n                {errors.name?.type===\"minLength\" && <span><br/>Must have 3 letters</span>}\n                {errors.name?.type===\"required\" && <span><br/>You must enter a name</span>}\n                {errors.name?.type===\"pattern\" && <span><br/>You must start with capital letter</span>}\n                <br/><br/>\n                <input type=\"text\" name=\"password\" placeholder=\"Company's password\" ref={register({\n                required:{value: true, message: \"Missing password\"},\n                minLength: {value:8, message: \"Minimum length is 8 chars\"}\n                })}/>\n                <span><br/>{errors.password?.message}</span>\n                <br/><br/>\n                <button>Add</button>\n            </form>\n        </div>\n    );\n}\n\nexport default AddCompany;\n","import axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport CustomerData from \"../../../Models/CustomerData\";\nimport notify from \"../../../Services/Notify\";\nimport \"./AddCustomer.css\";\n\nfunction AddCustomer(): JSX.Element {\n    const {register, handleSubmit, errors} = useForm<CustomerData>();\n    //for sending the browser to specific location \n    const history = useHistory();\n\n    async function send(customer:CustomerData){\n        try{\n            //lecturer is in json mode, ready to send.....      \n            const response = await axios.post<CustomerData>(\"/coupons/addCustomer\",customer);\n            console.log(response);\n            notify.success(\"The customer was successfully added.\");\n        } catch {\n            notify.error(\"The customer was NOT added.\")\n        }\n    }\n    \n    return (\n        <div className=\"AddCustomer Box\">\n\t\t\t<h2>Add Customer</h2>\n            <form onSubmit={handleSubmit(send)}>\n                <input type=\"text\" name=\"email\" placeholder=\"Customer's email\" ref={register({\n                    required: {value:true , message:\"Missing email\"},\n                    minLength: {value:10 , message:\"Minimum length is 10 chars\"}\n                })}/>\n                <span><br/>{errors.email?.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"firstName\" placeholder=\"Customer's first name\" ref={register({\n                    required: {value:true , message:\"Missing email\"},\n                    minLength: {value:3 , message:\"Minimum length is 3 chars\"}\n                })}/>\n                <span><br/>{errors.firstName?.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"lastName\" placeholder=\"Customer's last name\" ref={register({\n                    required: {value:true , message:\"Missing last name\"},\n                    minLength: {value:3 , message:\"Minimum length is 3 chars\"}\n                })}/>\n                <span><br/>{errors.lastName?.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"password\" placeholder=\"Customer's password\" ref={register({\n                required:{value: true, message: \"Missing password\"},\n                minLength: {value:8, message: \"Minimum length is 8 chars\"}\n                })}/>\n                <span><br/>{errors.password?.message}</span>\n                <br/><br/>\n                <button>Add</button>\n            </form>\n        </div>\n    );\n}\n\nexport default AddCustomer;","import axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport CompanyData from \"../../../Models/CompanyData\";\nimport notify from \"../../../Services/Notify\";\nimport \"./DeleteCompany.css\";\n\nfunction DeleteCompany(): JSX.Element {\n    const {register, handleSubmit, errors} = useForm<CompanyData>();\n    //for sending the browser to specific location \n    const history = useHistory();\n\n    async function send(company:CompanyData){\n        try{\n            //lecturer is in json mode, ready to send.....      \n            const response = await axios.delete<CompanyData>(\"/coupons/deleteCompany\"+company.id);\n            console.log(response);\n            notify.success(\"The company was successfully deleted.\");\n        } catch {\n            notify.error(\"The company was NOT deleted.\")\n        }\n    }\n\n    \n    return (\n        <div className=\"DeleteCompany Box\">\n\t\t\t<h2>Delete Company</h2>\n            <form onSubmit={handleSubmit(send)}>\n                <input type=\"number\" name=\"companyId\" placeholder=\"Company's id\" ref={register({\n                    required: {value:true , message:\"No number was typed\"},\n                })}/>\n                <span><br/>{errors.id?.message}</span>\n                <br/><br/>\n                <button>Delete</button>\n            </form>\n\n            \n        </div>\n    );\n}\n\nexport default DeleteCompany;","import axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport CustomerData from \"../../../Models/CustomerData\";\nimport notify from \"../../../Services/Notify\";\nimport \"./DeleteCustomer.css\";\n\nfunction DeleteCustomer(): JSX.Element {\n    const {register, handleSubmit, errors} = useForm<CustomerData>();\n    //for sending the browser to specific location \n    const history = useHistory();\n\n    async function send(customer:CustomerData){\n        try{\n            //lecturer is in json mode, ready to send.....      \n            const response = await axios.delete<CustomerData>(\"/coupons/deleteCustomer/\"+customer.id);\n            console.log(response);\n            notify.success(\"The customer was successfully deleted.\");\n        } catch {\n            notify.error(\"The customer was NOT deleted.\")\n        }\n    }\n\n    \n    return (\n        <div className=\"DeleteCustomer Box\">\n\t\t\t<h2>Delete Customer</h2>\n            <form onSubmit={handleSubmit(send)}>\n                <input type=\"number\" name=\"id\" placeholder=\"Customer's id\" ref={register({\n                    required: {value:true , message:\"No number was typed\"}\n                })}/>\n                <span><br/>{errors.id?.message}</span>\n                <br/><br/>\n                <button>Delete</button>\n            </form>\n        </div>\n    );\n}\n\nexport default DeleteCustomer;","import { Component } from \"react\";\nimport CompanyData from \"../Models/CompanyData\";\n\n\n\ninterface SingleCompanyProps {\n\tmyCompany:CompanyData\n}\n\nclass SingleCompany extends Component<SingleCompanyProps> {\n\n    public render(): JSX.Element {\n        return (\n            <div className=\"SingleCompany Box\">\n\t\t\t\tCOMPANY ID: {this.props.myCompany.id} <br/>\n                NAME: {this.props.myCompany.name} <br/>\n                EMAIL: {this.props.myCompany.email} <br/>\n                PASSWORD: {this.props.myCompany.password}<br/>\n                {/* {this.props.myCompany.coupons}<br/> */}\n            </div>\n        );\n    }\n}\nexport default SingleCompany;","import axios from \"axios\";\nimport { Component } from \"react\";\nimport { GetAllCompaniesAction } from \"../../../../Redux/adminState\";\nimport store from \"../../../../Redux/Store\";\nimport SingleCompany from \"../../../Companies/SingleCompany\";\nimport CompanyData from \"../../../Models/CompanyData\";\n\ninterface CompanyState {\n    companies : CompanyData[];\n}\n\nclass GetAllCompanies extends Component<{}, CompanyState> {\n    public constructor(props: {}) {\n        super(props);\n       this.state = {\n          companies: store.getState().adminState.companies\n    }\n}\n    public render(): JSX.Element {\n        return (\n            <div className=\"GetAllCompanies\">\n                <br/>\n                <div>\n                    {this.state.companies.map(item => <SingleCompany key={item.id} myCompany={item}/>)}\n                </div>\n            </div>\n        );\n    }\n    public async componentDidMount(){\n        \n            const response = await axios.get(\"/coupons/getAllCompanies\")\n            const myResponse = response.data;\n          \n            store.dispatch(GetAllCompaniesAction(myResponse));\n\n            this.setState({\n                companies: myResponse\n            });\n    }\n}\n\nexport default GetAllCompanies;","import CouponData from \"./CouponData\";\n\nclass CompanyData{\nid:number;\nname:string;\nemail:string;\npassword:string;\ncoupons:CouponData[];\n    \n}\nexport default CompanyData;","import { Component } from \"react\";\nimport \"./GetOneCompany.css\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport CompanyData from \"../../../Models/CompanyData\";\n\ninterface CompanyProps {\n    id:number;  \n}\n\ninterface CompanyState {\n    company:CompanyData\n}\n\nclass GetCompanyCoupons extends Component<CompanyProps, CompanyState> {\n\n    public constructor(props: CompanyProps) {\n        super(props);\n        this.state = {            \n            company : new CompanyData  \n        };\n        \n    }\n\n    public render(): JSX.Element {\n        return (\n            <div className=\"GetCompanyCoupons\">\n                <br/>\n                Company Details:\n                <hr/>\n               \n                <div className=\"Box \">                                   \n                    {this.state.company.id} <br/>\n                    {this.state.company.name} <br/>\n                    {this.state.company.email} <br/>\n                    {this.state.company.password}<br/>\n                    {this.state.company.coupons}<br/>\n            </div>\n            </div>\n        );\n    }\n\n    public async componentDidMount(){\n        const result = await axios.get(\"/coupons/getCouponsByCompany/\"+this.props.id);\n        const companyResult = result.data;\n        //console.log(carData);\n        this.setState({\n            company : companyResult\n        })\n    }\n}\n\nexport default GetCompanyCoupons;","import axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport CustomerData from \"../../../Models/CustomerData\";\nimport notify from \"../../../Services/Notify\";\nimport \"./GetOneCustomer.css\";\n\nfunction GetOneCustomer(): JSX.Element {\n    const {register, handleSubmit, errors} = useForm<CustomerData>();\n    //for sending the browser to specific location \n    const history = useHistory();\n\n    async function send(customer:CustomerData){\n        try{\n            //lecturer is in json mode, ready to send.....      \n            const response = await axios.get<CustomerData>(\"/coupons/GetOneCustomer\");\n            console.log(response);\n            notify.success(\"There is a customer with that id.\");\n        } catch {\n            notify.error(\"There is NO customer with that id.\")\n        }\n    }\n\n    \n    return (\n        <div className=\"GetOneCustomer Box\">\n\t\t\t<h2>Get one customer</h2>\n            <form onSubmit={handleSubmit(send)}>\n            <input type=\"number\" name=\"id\" placeholder=\"Customer's id\" ref={register({\n                    required: {value:true , message:\"Missing id\"},\n                })}/>\n                <span><br/>{errors.id?.message}</span>\n                <br/><br/>\n                <button>Get</button>\n            </form>\n        </div>\n    );\n}\n\nexport default GetOneCustomer;","import axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport CompanyData from \"../../../Models/CompanyData\";\nimport notify from \"../../../Services/Notify\";\nimport \"./UpdateCompany.css\";\n\nfunction UpdateCompany(): JSX.Element {\n    const {register, handleSubmit, errors} = useForm<CompanyData>();\n    //for sending the browser to specific location \n    const history = useHistory();\n\n    async function send(company:CompanyData){\n        try{\n            //lecturer is in json mode, ready to send.....   \n            console.log(\"trying to update\");\n            console.log(company);   \n            const response = await axios.post<CompanyData>(\"/coupons/updateCompany\",company);          \n            console.log(response);\n            notify.success(\"The company was successfully updated.\");\n        } catch {\n            notify.error(\"The company was NOT updated.\")\n        }\n    }\n\n    return (\n        <div className=\"UpdateCompany Box\">\n\t\t\t<h2>Update Company</h2>\n            <form onSubmit={handleSubmit(send)}>\n            <input type=\"number\" name=\"companyId\" placeholder=\"Company's id\" ref={register({\n                    required: {value:true , message:\"Missing id\"},\n                })}/>\n                <span><br/>{errors.id?.message}</span>\n                <br/><br/>\n                <input type=\"email\" name=\"email\" placeholder=\"Company's email\" ref={register({\n                    required: {value:true , message:\"Missing email\"},\n                    minLength: {value:10 , message:\"Minimum length is 10 chars\"}\n                })}/>\n                <span><br/>{errors.email?.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"name\" placeholder=\"Company's name\" ref={register({\n                required:{value: true, message: \"Missing name\"},\n                minLength: {value:3, message: \"Minimum length is 3 chars\"}\n                })}/>\n                <span><br/>{errors.name?.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"password\" placeholder=\"Company's password\" ref={register({\n                required:{value: true, message: \"Missing password\"},\n                minLength: {value:8, message: \"Minimum length is 8 chars\"}\n                })}/>\n                <span><br/>{errors.password?.message}</span>\n                <br/><br/>\n                <button>Update</button>\n            </form>\n        </div>\n    );\n}\n\nexport default UpdateCompany;","import axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport CustomerData from \"../../../Models/CustomerData\";\nimport notify from \"../../../Services/Notify\";\nimport \"./UpdateCustomer.css\";\n\nfunction UpdateCustomer(): JSX.Element {\n    const {register, handleSubmit, errors} = useForm<CustomerData>();\n    //for sending the browser to specific location \n    const history = useHistory();\n\n    async function send(customer:CustomerData){\n        try{\n            //lecturer is in json mode, ready to send.....      \n            const response = await axios.post<CustomerData>(\"/coupons/updateCustomer\",customer);\n            console.log(response);\n            notify.success(\"The customer was successfully updated.\");\n        } catch {\n            notify.error(\"The customer was NOT updated.\")\n        }\n    }\n\n    \n    return (\n        <div className=\"UpdateCustomer Box\">\n\t\t\t<h2>Update Customer</h2>\n            <form onSubmit={handleSubmit(send)}>\n            <input type=\"number\" name=\"id\" placeholder=\"Customer's id\" ref={register({\n                    required: {value:true , message:\"Missing id\"},\n                })}/>\n                <span><br/>{errors.id?.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"email\" placeholder=\"Customer's email\" ref={register({\n                    required: {value:true , message:\"Missing email\"},\n                    minLength: {value:10 , message:\"Minimum length is 10 chars\"}\n                })}/>\n                <br/><br/>\n                <input type=\"text\" name=\"firstName\" placeholder=\"Customer's name\" ref={register({\n                    required: {value:true , message:\"Missing first name\"},\n                    minLength: {value:3 , message:\"Minimum length is 3 chars\"}\n                })}/>\n                <span><br/>{errors.firstName?.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"lastName\" placeholder=\"Customer's last name\" ref={register({\n                    required: {value:true , message:\"Missing last name\"},\n                    minLength: {value:3 , message:\"Minimum length is 3 chars\"}\n                })}/>\n                <span><br/>{errors.lastName?.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"password\" placeholder=\"Customer's password\" ref={register({\n                required:{value: true, message: \"Missing password\"},\n                minLength: {value:8, message: \"Minimum length is 8 chars\"}\n                })}/>\n                <span><br/>{errors.password?.message}</span>\n                <br/><br/>\n                <button>Update</button>\n            </form>\n        </div>\n    );\n}\n\nexport default UpdateCustomer;","import axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport CouponData from \"../../../Models/CouponData\";\nimport notify from \"../../../Services/Notify\";\nimport \"./AddCoupon.css\";\n\nfunction AddCoupon(): JSX.Element {\n    const {register, handleSubmit, errors} = useForm<CouponData>();\n    //for sending the browser to specific location \n    const history = useHistory();\n\n    async function send(coupon:CouponData){\n        try{   \n            const response = await axios.post<CouponData>(\"/couponsdb/addCoupon\",coupon);\n            console.log(response);\n            notify.success(\"The coupon was successfully added.\");\n        } catch {\n            notify.error(\"The coupon was NOT added.\")\n        }\n    }\n\n    \n    return (\n        <div className=\"AddCoupon Box\">\n\t\t\t<h2>Add coupon</h2>\n            <form onSubmit={handleSubmit(send)}>\n                <input type=\"number\" name=\"companyId\" placeholder=\"Company id\" ref={register({\n                    required: {value:true , message:\"Missing company id.\"},\n                })}/>\n                <span><br/>{errors.companyID?.message}</span>\n                <br/><br/>\n                <input type=\"number\" name=\"category\" placeholder=\"Category id\" ref={register({\n                    required: {value:true , message:\"Missing category id.\"},\n                })}/>\n                <span><br/>{errors.category.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"title\" placeholder=\"Title\" ref={register(\n                    {required:true, minLength:3, pattern: /^[A-Z].+$/}\n                )}/>\n                <span><br/>{errors.title?.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"description\" placeholder=\"Description\" ref={register(\n                    {required:true, minLength:8, pattern: /^[A-Z].+$/}\n                )}/>\n                <span><br/>{errors.description?.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"start date\" placeholder=\"Start date\" ref={register(\n                    {required:true}\n                )}/>\n                <span><br/>{errors.startDate?.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"end date\" placeholder=\"End date\" ref={register(\n                    {required:true}\n                )}/>\n                <span><br/>{errors.endDate?.message}</span>\n                <br/><br/>\n                <input type=\"number\" name=\"amount\" placeholder=\"Amount\" ref={register({\n                    required: {value:true , message:\"Missing amount.\"},\n                })}/>\n                <span><br/>{errors.amount?.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"price\" placeholder=\"Price\" ref={register({\n                required:{value: true, message: \"Missing price.\"},\n                })}/>\n                <span><br/>{errors.image?.message}</span>\n                <br/><br/>\n                <button>Add</button>\n            </form>\n        </div>\n    );\n}\n\nexport default AddCoupon;","import axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport store from \"../../../../Redux/Store\";\nimport CompanyData from \"../../../Models/CompanyData\";\nimport CouponData from \"../../../Models/CouponData\";\nimport notify from \"../../../Services/Notify\";\nimport \"./DeleteCoupon.css\";\n\nfunction DeleteCoupon(): JSX.Element {\n    const {register, handleSubmit, errors} = useForm<CouponData>();\n    //for sending the browser to specific location \n    const history = useHistory();\n\n    async function send(coupon:CouponData){\n        try{\n            //lecturer is in json mode, ready to send.....      \n            const response = await axios.delete<CouponData>(\"/couponsdb/deleteCoupon/\"+coupon.id);\n            console.log(response);\n            notify.success(\"The coupon was successfully deleted.\");\n        \n        } catch {\n            notify.error(\"The coupon was NOT deleted.\")\n        }\n    }\n\n    \n    return (\n        <div className=\"DeleteCoupon Box\">\n\t\t\t<h2>Delete Coupon</h2>\n            <form onSubmit={handleSubmit(send)}>\n                <input type=\"number\" name=\"id\" placeholder=\"Coupon's id\" ref={register({\n                    required: {value:true , message:\"No id number was typed.\"},\n                })}/>\n                <span><br/>{errors.id?.message}</span>\n                <br/><br/>\n                <button>Delete</button>\n            </form>\n        </div>\n    );\n}\n\nexport default DeleteCoupon;","import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport store from \"../../../../Redux/Store\";\nimport CouponData from \"../../../Models/CouponData\";\nimport notify from \"../../../Services/Notify\";\nimport \"./GetCompanyCouponsByCategory.css\";\n\nfunction GetCompanyCouponsByCategory(): JSX.Element {\n    const {register, handleSubmit, errors} = useForm<CouponData>();\n    //for sending the browser to specific location \n    const history = useHistory();\n\n    async function send(coupon:CouponData){\n            //lecturer is in json mode, ready to send.....      \n            const response = await axios.get<CouponData>(\"/coupons/GetCompanyCouponsByCategory/{/id}{/categoryId}\");\n            console.log(response);\n    }\n\n    /*\n    useEffect(() => {\n       if (store.getState().authState.user.clientType!=\"company\"){\n            notify.error(\"You are not allowed, you little p***\");\n            history.push(\"/Login\");\n        }\n    })\n    */\n    \n    return (\n        <div className=\"GetCompanyCouponsByCategory Box\">\n\t\t\t<h2>Get company coupons by category</h2>\n            <input type=\"number\" name=\"category\" placeholder=\"Category id.\" ref={register({\n                    required: {value:true , message:\"No category number was typed\"},\n                })}/>\n                <span><br/>{errors.category?.message}</span>\n                <br/><br/>\n                <button>Get</button>\n        </div>\n    );\n}\n\nexport default GetCompanyCouponsByCategory;","import { Component } from \"react\";\nimport CouponData from \"../Models/CouponData\";\n\n\ninterface SingleCouponProps {\n\tmyCoupon:CouponData;\n}\n\nclass SingleCoupon extends Component<SingleCouponProps> {\n\n    public render(): JSX.Element {\n        return (\n\n            <div className=\"SingleCompany Box\">\t\t\n              {this.props.myCoupon.image} <br/>\n            <pre>\n                COUPON ID:        {this.props.myCoupon.id} <br/>\n\t\t\t\tCOMPANY ID:      {this.props.myCoupon.companyID} <br/>\n\t\t\t\tCATEGORY:          {this.props.myCoupon.category} <br/>\n\t\t\t\tTITLE:                   {this.props.myCoupon.title} <br/>\n                DESCRIPTION:     {this.props.myCoupon.description} <br/>\n                START DATE:        {this.props.myCoupon.startDate} <br/>\n\t\t\t\tEND DATE:           {this.props.myCoupon.endDate} <br/>\n\t\t\t\tAMOUNT:            {this.props.myCoupon.amount} <br/>\n\t\t\t\tPRICE:                  {this.props.myCoupon.price} <br/>\n                IMAGE:                  {this.props.myCoupon.image} <br/>\n\n                </pre>\n            </div>\n        );\n    }\n}\nexport default SingleCoupon;","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport SingleCoupon from \"../../../Coupons/SingleCoupon\";\nimport CompanyData from \"../../../Models/CompanyData\";\nimport CouponData from \"../../../Models/CouponData\";\nimport notify from \"../../../Services/Notify\";\nimport AxiosRequest from \"../../../../axios/AxiosRequest\";\n\nfunction GetCompanyCouponsByMaxPrice(): JSX.Element {\n    const [coupons, setCoupons] = useState<CouponData[]>([]);\n\n    const {register, handleSubmit, errors} = useForm<CompanyData>();\n    const history = useHistory();\n\n    async function send(){\n        try{\n            // const { data : coupons } : { data : CouponData[] } = await axios.get(\n            const { data : coupons } : { data : CouponData[] } = await AxiosRequest.get(\n            // `/coupons/getCouponsByMaxPrice/`,\n            `/coupons/getCouponsByMaxPrice/` //You need to change getCouponsByMaxPrice controller in spring.\n            );\n            setCoupons(coupons);\n            notify.success(\"\");\n        } catch {\n            notify.error(\"Error\")\n        }\n    }\n\n   return (\n       <div className=\"GetCompanyCouponsByMaxPrice row\">\n           {coupons.map (item => <SingleCoupon key= {item.id} myCoupon={item}/>)}\n        <h2>Coupons by max price:</h2>\n        <form onSubmit={handleSubmit(send)}>\n            <input type=\"number\" name=\"price\" placeholder=\"Maximum price\" ref={register({\n                required: {value:true , message:\"Missing price.\"},\n            })}/>\n            <br/><br/>\n            <button>Get</button>\n        </form>\n    </div>\n   );\n}\n   \nexport default GetCompanyCouponsByMaxPrice;\n\n// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import { useHistory } from \"react-router-dom\";\n// import SingleCoupon from \"../../../Coupons/SingleCoupon\";\n// import CompanyData from \"../../../Models/CompanyData\";\n// import CouponData from \"../../../Models/CouponData\";\n// import notify from \"../../../Services/Notify\";\n//\n// function GetCompanyCouponsByMaxPrice(): JSX.Element {\n//     const [coupons, setCoupons] = useState<CouponData[]>([]);\n//\n//     const {register, handleSubmit, errors} = useForm<CompanyData>();\n//     const history = useHistory();\n//\n//     async function send(){\n//         try{\n//             const { data : coupons } : { data : CouponData[] } = await axios.get(\n//                 `/coupons/getCouponsByMaxPrice/`,\n//\n//             );\n//\n//             setCoupons(coupons);\n//             notify.success(\"\");\n//         } catch {\n//             notify.error(\"Error\")\n//         }\n//     }\n//\n//     return (\n//         <div className=\"GetCompanyCouponsByMaxPrice row\">\n//             {coupons.map (item => <SingleCoupon key= {item.id} myCoupon={item}/>)}\n//             <h2>Coupons by max price:</h2>\n//             <form onSubmit={handleSubmit(send)}>\n//                 <input type=\"number\" name=\"price\" placeholder=\"Maximum price\" ref={register({\n//                     required: {value:true , message:\"Missing price.\"},\n//                 })}/>\n//                 <br/><br/>\n//                 <button>Get</button>\n//             </form>\n//         </div>\n//     );\n// }\n//\n// export default GetCompanyCouponsByMaxPrice;","import { Component } from \"react\";\nimport \"./GetCompanyDetails.css\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport CompanyData from \"../../../Models/CompanyData\";\nimport AxiosRequest from \"../../../../axios/AxiosRequest\";\n\ninterface GetCompanyDetailsState {\n    myCompany:CompanyData;\n}\n\nclass GetCompanyDetails extends Component<{}, GetCompanyDetailsState> {\n\n    public constructor(props:{} ) {\n        super(props);\n        this.state = {            \n            myCompany : new CompanyData  \n        };\n        \n    }\n\n    public render(): JSX.Element {\n        return (\n            <div className=\"GetCompanyDetails\">               \n                <div className=\"Box GetCompanyDetails\">   \n                                <h3>Company details:</h3>                                \n                   COMPANY NAME: {this.state.myCompany.name} <br/>\n                   ID: {this.state.myCompany.id} <br/>\n                   EMAIL: {this.state.myCompany.email} <br/>\n                </div>\n                \n            </div>\n        );\n    }\n\n    public async componentDidMount(){\n        //const result = await axios.get(\"/coupons/getOneCompanyLoggedIn\"); //OLD\n        const result = await AxiosRequest.get(\"/coupons/getCompanyLoggedIn\");\n        const CompanyData = result.data;\n        console.log(CompanyData);\n        this.setState({\n            myCompany : CompanyData\n        })\n    }\n}\n\nexport default GetCompanyDetails;","import axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport CouponData from \"../../../Models/CouponData\";\nimport notify from \"../../../Services/Notify\";\nimport \"./UpdateCoupon.css\";\n\nfunction UpdateCoupon(): JSX.Element {\n    const {register, handleSubmit, errors} = useForm<CouponData>();\n    //for sending the browser to specific location \n    const history = useHistory();\n\n    async function send(coupon:CouponData){\n        try{\n            //lecturer is in json mode, ready to send.....      \n            const response = await axios.put<CouponData>(\"/couponsdb/updateCoupon\",coupon);\n            console.log(response);\n            notify.success(\"The coupon was successfully updated.\");\n        } catch {\n            notify.error(\"The coupon was NOT updated.\")\n        }\n    }\n\n    \n    return (\n        <div className=\"UpdateCoupon Box\">\n\t\t\t<h2>Update coupon</h2>\n            <form onSubmit={handleSubmit(send)}>\n                <input type=\"number\" name=\"companyId\" placeholder=\"Company id\" ref={register({\n                    required: {value:true , message:\"Missing company id.\"},\n                })}/>\n                <span><br/>{errors.companyID?.message}</span>\n                <br/><br/>\n                <input type=\"number\" name=\"category\" placeholder=\"Category id\" ref={register({\n                    required: {value:true , message:\"Missing category id.\"},\n                })}/>\n                <span><br/>{errors.category?.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"title\" placeholder=\"Title\" ref={register(\n                    {required:true, minLength:3, pattern: /^[A-Z].+$/}\n                )}/>\n                <span><br/>{errors.title?.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"description\" placeholder=\"Description\" ref={register(\n                    {required:true, minLength:8, pattern: /^[A-Z].+$/}\n                )}/>\n                <span><br/>{errors.description?.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"start date\" placeholder=\"Start date\" ref={register(\n                    {required:true}\n                )}/>\n                <span><br/>{errors.startDate?.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"end date\" placeholder=\"End date\" ref={register(\n                    {required:true}\n                )}/>\n                <span><br/>{errors.endDate?.message}</span>\n                <br/><br/>\n                <input type=\"number\" name=\"amount\" placeholder=\"Amount\" ref={register({\n                    required: {value:true , message:\"Missing amount.\"},\n                })}/>\n                <span><br/>{errors.amount?.message}</span>\n                <br/><br/>\n                <input type=\"text\" name=\"price\" placeholder=\"Price\" ref={register({\n                required:{value: true, message: \"Missing price.\"},\n                })}/>\n                <span><br/>{errors.image?.message}</span>\n                <br/><br/>\n                <button>Update</button>\n            </form>\n        </div>\n    );\n}\n\nexport default UpdateCoupon;","// // import axios from \"axios\";\n// // import { Component } from \"react\";\n// // import { useForm } from \"react-hook-form\";\n// // import { useHistory } from \"react-router-dom\";\n// // import store from \"../../../../Redux/Store\";\n// // import SingleCompany from \"../../../Companies/SingleCompany\";\n// // import CompanyData from \"../../../Models/CompanyData\";\n// // import notify from \"../../../Services/Notify\";\n// // import axios from \"axios\";\n// // import { useForm } from \"react-hook-form\";\n// // import { useHistory } from \"react-router-dom\";\n// // import CompanyData from \"../../../Models/CompanyData\";\n// // import notify from \"../../../Services/Notify\";\n// // import \"./DeleteCompany.css\";\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport AxiosRequest from \"../../../../axios/AxiosRequest\";\nimport SingleCoupon from \"../../../Coupons/SingleCoupon\";\nimport CompanyData from \"../../../Models/CompanyData\";\nimport CouponData from \"../../../Models/CouponData\";\nimport notify from \"../../../Services/Notify\";\n\n// function GetCompanyCoupons(): JSX.Element {\n//     const {register, handleSubmit, errors} = useForm<CompanyData>();\n//     //for sending the browser to specific location \n//     const history = useHistory();\n\n//     async function send(company:CompanyData){\n//         try{\n//             //lecturer is in json mode, ready to send.....      \n//             const response = await axios.get<CompanyData>(\"/coupons/getCouponsByCompany\");\n//             console.log(response);\n//             const myResponse = response.data;\n            \n//             console.log(myResponse)\n//             notify.success(\"The company was successfully deleted.\");\n//         } catch {\n//             notify.error(\"The company was NOT deleted.\")\n//         }\n//     }\n\n    \n//     return (\n//         <div className=\"GetCompanyCoupons Box\">\n// \t\t\t<h2>Get Company Coupons</h2>\n//             <form onSubmit={handleSubmit(send)}>\n//                 <input type=\"number\" name=\"companyId\" placeholder=\"Company's id\" ref={register({\n//                     required: {value:true , message:\"No number was typed\"},\n//                 })}/>\n//                 <span><br/>{errors.companyId?.message}</span>\n//                 <br/><br/>\n//                 <button>Get</button>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default GetCompanyCoupons;\n\n\n// interface GetCompanyCouponsProps {\n//     companyId:number;  \n// }\n\n// interface CompanyState {\n//     companies:CompanyData[];\n// }\n// const {register, handleSubmit, errors} = useForm<CompanyData>();\n//  //for sending the browser to specific location \n//  const history = useHistory();\n \n//  async function send(customer:CompanyData){\n//     try{\n//         //lecturer is in json mode, ready to send.....      \n//         const response = await axios.get(\"/coupons/getCouponsByCompany\"+this.props.companyId);\n//         console.log(response);\n//         notify.success(\"\");\n//     } catch {\n//         notify.error(\"\")\n//     }\n// }\n//        const { register, handleSubmit, errors } () = this.props;\n\n// class GetCompanyCoupons extends Component<GetCompanyCouponsProps, CompanyState> {\n//     public constructor(props: GetCompanyCouponsProps) {\n//         super(props);\n//         this.state = {            \n//             companies: store.getState().adminState.companies\n//         };\n//  }\n\n \n\n//     public render(): JSX.Element {\n \n\n \n//     return (\n//       <form onSubmit={handleSubmit(this.onSubmit)}>\n//         <input name=\"companyId\" defaultValue=\"Company id\" ref={register} />\n//         <input\n//           name=\"exampleRequired\"\n//           ref={register({ required: true, maxLength: 10 })}\n//         />\n//         {errors.exampleRequired && <p>This field is required</p>}\n//         <input type=\"submit\" />\n//       </form>\n//         );\n//     }\n    \n    \n\n//     public async componentDidMount(){\n//         const result = await axios.get(\"/coupons/getCompanyCoupons/\"+this.props.companyId);\n//         const companyResult = result.data;\n//         //console.log(carData);\n//         this.setState({\n//             companies:companyResult\n//         })\n//     }\n\n// export default GetCompanyCoupons;\n\n//הפונקציה של גבי \nfunction GetCompanyCoupons(): JSX.Element {\n    const [coupons, setCoupons] = useState<CouponData[]>([]);\n\n    const {register, handleSubmit, errors} = useForm<CompanyData>();\n    //for sending the browser to specific location \n    const history = useHistory();\n\n    async function send(company:CompanyData){\n        try{\n            //lecturer is in json mode, ready to send.....      \n    const { data : coupons } : { data : CouponData[] } = await AxiosRequest.get(`/coupons/getCouponsByCompany/`+company.id);\n    setCoupons(coupons);\n            notify.success(\"\");\n        } catch {\n            notify.error(\"Error\")\n        }\n    }\n   \n       return (\n           <div className=\"CompanyAllCouponsPage Box\">\n               {coupons.map (item => <SingleCoupon key= {item.id} myCoupon={item}/>)}\n\t\t\t<h2>Get company coupons:</h2>\n            <form onSubmit={handleSubmit(send)}>\n                <input type=\"number\" name=\"id\" placeholder=\"Company's id\" ref={register({\n                    required: {value:true , message:\"Missing id.\"},\n                })}/>\n                <br/><br/>\n                <button>Get</button>\n            </form>\n        </div>\n       );\n   }\n   \n   export default GetCompanyCoupons;","import React, { useEffect, useState } from 'react';\nimport MaterialTable from 'material-table';\nimport './CustomersTable.css';\nimport axios from 'axios';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport AxiosRequest from '../../../axios/AxiosRequest';\n\n\n// regex for email validation\nconst validateEmail = (email) => {\n  const re = /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nconst CustomerTable = () => {\n\n  const [user, setUser] = useState([]);\n  const [iserror, setIserror] = useState(false);\n  const [errorMessages, setErrorMessages] = useState([]);\n\n  let columns = [\n    { title: 'ID', field: 'id' },\n    { title: 'First name', field: 'firstName' },\n    { title: 'Last name', field: 'lastName' },\n    { title: 'Email', field: 'email' },\n    { title: 'Password', field: 'password' },\n    { title: 'coupons', button: <button type=\"\">Coupons</button> }\n  ]\n\n  // let data = [\n  //   { name: 'manish', username: 'traptrick', email: 'themk85@gmail.com', phone: '9999999999', website: 'https://github.com/traptrick' }\n  // ]  \n\n  useEffect(() => {\n    AxiosRequest.get(`/coupons/getAllCustomers`)\n      .then(res => {\n        const users = res.data;\n        setUser(users);\n        // console.log(users);\n      })\n  }, [])\n\n\n\n  //function for updating the existing row details\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    //validating the data inputs\n    let errorList = []\n    if (newData.id !== oldData.id) {\n      errorList.push(\"* You can't update the customer's id.\")\n    }\n    if (newData.firstName === \"\") {\n      errorList.push(\"* Please fill the first name field.\")\n    }\n    if (newData.firstName.length < 3) {\n      errorList.push(\"* First name must be at least 3 letters long.\")\n    }\n    if (newData.lastName === \"\") {\n      errorList.push(\"* Please fill the last name field.\")\n    }\n    if (newData.lastName.length < 3) {\n      errorList.push(\"* Last name must be at least 3 letters long.\")\n    }\n    if (newData.email === \"\" || validateEmail(newData.email) === false) {\n      errorList.push(\"* Please enter a valid email\")\n    }\n    if (newData.password.length < 3) {\n      errorList.push(\"* The password must be at least 3 notes long.\")\n    }\n    \n\n    if (errorList.length < 1) {\n      AxiosRequest.post(`/coupons/updateCustomer`, newData)\n        .then(response => {\n          const updateUser = [...user];\n          const index = oldData.tableData.companyId;\n          updateUser[index] = newData;\n          setUser([...updateUser]);\n          resolve()\n          setIserror(false)\n          setErrorMessages([])\n        })\n        .catch(error => {\n          setErrorMessages([\"* There is no customer with that id. Update failed.\"])\n          setIserror(true)\n          resolve()\n\n        })\n    } else {\n      setErrorMessages(errorList)\n      setIserror(true)\n      resolve()\n\n    }\n  }\n\n\n  //function for deleting a row\n  const handleRowDelete = (oldData, resolve) => {\n    AxiosRequest.delete(`/coupons/deleteCustomer/${oldData.id}`)\n      .then(response => {\n        const dataDelete = [...user];\n        const index = oldData.tableData.id;\n        dataDelete.splice(index, 1);\n        setUser([...dataDelete]);\n        resolve()\n      })\n      .catch(error => {\n        setErrorMessages([\"* Server error. Delete failed.\"])\n        setIserror(true)\n        resolve()\n      })\n  }\n\n\n  //function for adding a new row to the table\n  const handleRowAdd = (newData, resolve) => {\n    //validating the data inputs\n    let errorList = []\n    if(newData.id >= \"\") {\n      errorList.push(\"* Please don't fill the id field. Id's are given by the system.\")\n    }\n    if (newData.firstName === \"\") {\n      errorList.push(\"* Please fill the first name field.\")\n    }\n    if (newData.firstName.length < 3) {\n      errorList.push(\"* First name must be at least 3 notes long.\")\n    }\n    if (newData.lastName === \"\") {\n      errorList.push(\"* Please fill the last name field.\")\n    }\n    if (newData.lastName.length < 3) {\n      errorList.push(\"* Last name must be at least 3 notes long.\")\n    }\n    if (newData.email === \"\" || validateEmail(newData.email) === false) {\n      errorList.push(\"* Please enter a valid email.\")\n    }\n    if (newData.password < 3) {\n      errorList.push(\"* The password must be at least 3 notes long.\")\n    }\n\n    if (errorList.length < 1) {\n      AxiosRequest.post(`/coupons/addCustomer`, newData)\n        .then(response => {\n          let newUserdata = [...user];\n          newUserdata.push(newData);\n          setUser(newUserdata);\n          resolve()\n          setErrorMessages([])\n          setIserror(false)\n        })\n        .catch(error => {\n          setErrorMessages([\"* Customer's email is already taken. Try again.\"])\n          setIserror(true)\n          resolve()\n        })\n    } else {\n      setErrorMessages(errorList)\n      setIserror(true)\n      resolve()\n    }\n  }\n\n\n  return (\n    <div className=\"CustomerTable\">\n      <h1>Customers management:</h1> <br /><br />\n\n      <MaterialTable\n        title=\"Customer details:\"\n        columns={columns}\n        data={user}\n        options={{\n          headerStyle: { borderBottomColor: 'red', borderBottomWidth: '3px', fontFamily: 'verdana' },\n          actionsColumnIndex: -1\n        }}\n        editable={{\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve) => {\n              handleRowUpdate(newData, oldData, resolve);\n\n            }),\n          onRowAdd: (newData) =>\n            new Promise((resolve) => {\n              handleRowAdd(newData, resolve)\n            }),\n          onRowDelete: (oldData) =>\n            new Promise((resolve) => {\n              handleRowDelete(oldData, resolve)\n            }),\n        }}\n      />\n\n      <div>\n        {iserror &&\n          <Alert severity=\"error\">\n            <AlertTitle>ERROR</AlertTitle>\n            {errorMessages.map((msg, i) => {\n              return <div key={i}>{msg}</div>\n            })}\n          </Alert>\n        }\n      </div>\n\n    </div>\n  );\n}\n\nexport default CustomerTable;\n","import React, { useEffect, useState } from 'react';\nimport MaterialTable from 'material-table';\nimport './CompaniesTable.css';\nimport axios from 'axios';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport AxiosRequest from '../../../axios/AxiosRequest';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\n// regex for email validation\nconst validateEmail = (email) => {\n  const re = /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\n  return re.test(String(email).toLowerCase());\n}\n\n\nconst CompanyTable = () => {\n\n  const [user, setUser] = useState([]);\n  const [iserror, setIserror] = useState(false);\n  const [errorMessages, setErrorMessages] = useState([]);\n   const[preferDarkMode, setPreferDarkMode] = useState([]);\n  const[Brightness4Icon, setBrightness4Icon] = useState([]);\n  const[Brightness7Icon, setBrightness7Icon]= useState([]);\n  // const[Checkbox, setCheckbox] = uesState([]);\n  // const[filter, setFilter] = uesState([]);\n \n\n  \n\n\n\n  // Line 163:17:  'preferDarkMode' is not defined     no-undef\n  // Line 163:35:  'Brightness4Icon' is not defined    react/jsx-no-undef\n  // Line 163:57:  'Brightness7Icon' is not defined    react/jsx-no-undef\n  // Line 166:17:  'setPreferDarkMode' is not defined  no-undef\n  // Line 166:36:  'preferDarkMode' is not defined     no-undef\n  // Line 172:18:  'Checkbox' is not defined           react/jsx-no-undef\n  // Line 173:28:  'filter' is not defined             no-undef\n  // Line 175:21:  'setFilter' is not defined          no-undef\n  // Line 175:32:  'filter' is not defined             no-undef\n  // Line 183:17:  'setFilter' is not defined          no-undef\n  // Line 183:28:  'filter' is not defined             no-undef\n  let columns = [\n    { title: 'ID', field: 'id' },\n    { title: 'Name', field: 'name' },\n    { title: 'Email', field: 'email' },\n    { title: 'Password', field: 'password' }\n  ]\n\n  // let data = [\n  //   { name: 'manish', username: 'traptrick', email: 'themk85@gmail.com', phone: '9999999999', website: 'https://github.com/traptrick' }\n  // ]  \n\n  useEffect(() => {\n    AxiosRequest.get(`/coupons/getAllCompanies`)\n      .then(res => {\n        const users = res.data;\n        setUser(users);\n        // console.log(users);\n      })\n  }, [])\n\n\n\n  //function for updating the existing row details\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    //validating the data inputs\n    let errorList = []\n    if (newData.id !== oldData.id) {\n      errorList.push(\"You can't update the company's id.\")\n    }\n    if (newData.name !== oldData.name) {\n      errorList.push(\"You can't update the company's name.\")\n    }\n    if (newData.email === \"\" || validateEmail(newData.email) === false) {\n      errorList.push(\"Please enter a valid email\")\n    }\n    if (newData.password.length < 3) {\n      errorList.push(\"The password must be at least 3 notes long.\")\n    }\n    \n\n    if (errorList.length < 1) {\n      AxiosRequest.put(`/coupons/updateCompany`, newData)\n        .then(response => {\n          const updateUser = [...user];\n          const index = oldData.tableData.companyId;\n          updateUser[index] = newData;\n          setUser([...updateUser]);\n          resolve()\n          setIserror(false)\n          setErrorMessages([])\n        })\n        .catch(error => {\n          setErrorMessages([\"There is no company with that id and name. Update failed.\"])\n          setIserror(true)\n          resolve()\n\n        })\n    } else {\n      setErrorMessages(errorList)\n      setIserror(true)\n      resolve()\n\n    }\n  }\n\n\n  //function for deleting a row\n  const handleRowDelete = (oldData, resolve) => {\n    AxiosRequest.delete(`/coupons/deleteCompany/${oldData.id}`)\n      .then(response => {\n        const dataDelete = [...user];\n        const index = oldData.tableData.id;\n        dataDelete.splice(index, 1);\n        setUser([...dataDelete]);\n        resolve()\n      })\n      .catch(error => {\n        setErrorMessages([\"Server error. Delete failed.\"])\n        setIserror(true)\n        resolve()\n      })\n  }\n\n\n  //function for adding a new row to the table\n  const handleRowAdd = (newData, resolve) => {\n    //validating the data inputs\n    let errorList = []\n    if (newData.id >= \"\") {\n      errorList.push(\"Please leave the id field empty. Id's are given by the system.\")\n    }\n    if (newData.name === \"\") {\n      errorList.push(\"Please fill the name field.\")\n    }\n    if (newData.name.length < 3) {\n      errorList.push(\"The name must be at least 3 notes long\")\n    }\n    if (newData.email === \"\" || validateEmail(newData.email) === false) {\n      errorList.push(\"Please enter a valid email.\")\n    }\n    if (newData.password.length < 3) {\n      errorList.push(\"The password must be at least 3 notes long.\")\n    }\n\n    if (errorList.length < 1) {\n      AxiosRequest.post(`/coupons/addCompany`, newData)\n        .then(response => {\n          let newUserdata = [...user];\n          newUserdata.push(newData);\n          setUser(newUserdata);\n          resolve()\n          setErrorMessages([])\n          setIserror(false)\n        })\n        .catch(error => {\n          setErrorMessages([\"You can't give a new company a name or an email that are already taken. Try again.\"])\n          setIserror(true)\n          resolve()\n        })\n    } else {\n      setErrorMessages(errorList)\n      setIserror(true)\n      resolve()\n    }\n  }\n\n\n  return (\n    <div className=\"CompanyTable\">\n      <h1>Companies management:</h1> <br /><br />\n\n      <MaterialTable\n        title=\"Company details:\"\n        columns={columns}\n        data={user}\n        \n        options={{\n          headerStyle: { borderBottomColor: 'red', borderBottomWidth: '3px', fontFamily: 'verdana' },\n          actionsColumnIndex: -1\n        }}\n        editable={{\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve) => {\n              handleRowUpdate(newData, oldData, resolve);\n\n            }),\n          onRowAdd: (newData) =>\n            new Promise((resolve) => {\n              handleRowAdd(newData, resolve)\n            }),\n          onRowDelete: (oldData) =>\n            new Promise((resolve) => {\n              handleRowDelete(oldData, resolve)\n            }),\n        }}\n      />\n\n      <div>\n        {iserror &&\n          <Alert severity=\"error\">\n            <AlertTitle>ERROR</AlertTitle>\n            {errorMessages.map((msg, i) => {\n              return <div key={i}>{msg}</div>\n            })}\n          </Alert>\n        }\n      </div>\n\n    </div>\n  );\n}\n\nexport default CompanyTable;\n","\nfunction MyPurchasedCoupons(){\n    return(\n        <h1>dfdf</h1>\n    )\n}\n\nexport default MyPurchasedCoupons","import React, { useEffect, useState } from 'react';\nimport MaterialTable from 'material-table';\nimport './SingleCompanyTable.css';\nimport axios from 'axios';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport AxiosRequest from \"../../../axios/AxiosRequest\";\n\n\n// regex for email validation\nconst validateEmail = (email) => {\n  const re = /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nconst SingleCompanyTable = () => {\n\n  const [user, setUser] = useState([]);\n  const [iserror, setIserror] = useState(false);\n  const [errorMessages, setErrorMessages] = useState([]);\n\n  let columns = [\n   { title: 'CouponId', field: 'id' },\n   { title: 'CompanyID', field: 'companyID' },\n    { title: 'Category', field: 'category' },\n    { title: 'Title', field: 'title' },\n    { title: 'Description', field: 'description' },\n    { title: 'StartDate', field: 'startDate' },\n    { title: 'EndDate', field: 'endDate' },\n    { title: 'Amount', field: 'amount' },\n    {title: \"Price\", field: \"price\",\n      customFilterAndSearch: (term, rowData) => rowData.price <= term,\n    },\n    { title: 'Image', field: 'image' }\n  ]\n\n  // let data = [\n  //   { name: 'manish', username: 'traptrick', email: 'themk85@gmail.com', phone: '9999999999', website: 'https://github.com/traptrick' }\n  // ]  \n\n  useEffect(() => {\n    AxiosRequest.get(\"/coupons/getCouponsByCompany\")\n      .then(res => {\n        const users = res.data;\n        setUser(users);\n        // console.log(users);\n      })\n  }, [])\n\n\n\n  //function for updating the existing row details\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    //validating the data inputs\n    let errorList = []\n    if (newData.id !== oldData.id) {\n      errorList.push(\"* You can't update the coupon's id.\")\n    }\n    if (newData.id === \"\") {\n        errorList.push(\"* You must fill the coupon id field.\")\n      }\n    if (newData.companyID !== oldData.companyID) {\n      errorList.push(\"* You can't update the company's id.\")\n    }\n    if (newData.companyId === \"\") {\n        errorList.push(\"* You must fill the company id field.\")\n      }\n    if (newData.category === \"\") {\n      errorList.push(\"* Please fill the category field.\")\n    }\n    if (newData.title === \"\") {\n      errorList.push(\"* Please fill the title field.\")\n    }\n    if (newData.title.length < 3) {\n        errorList.push(\"* Title must be at least 3 notes long.\")\n      }\n    if (newData.description === \"\") {\n      errorList.push(\"* Please fill the description field.\")\n    }\n    if (newData.description.length < 3) {\n        errorList.push(\"* The description field must be at least 3 notes long.\")\n      }\n    if (newData.startDate === \"\" ) {\n      errorList.push(\"* Please fill the start-date field.\")\n    }\n    if (newData.endDate === \"\") {\n      errorList.push(\"* Please fill the end-date field.\")\n    }\n    if (newData.amount === \"\") {\n      errorList.push(\"* Please fill the amount field.\")\n    }\n    if (newData.amount < 0) {\n        errorList.push(\"* Amount can't be negative.\")\n      }\n    if (newData.price === \"\") {\n      errorList.push(\"* Please fill the price field.\")\n    }\n    if (newData.price < 0) {\n        errorList.push(\"* The price can't have a negative value.\")\n      }\n    if (newData.image === \"\") {\n      errorList.push(\"* Please fill the image field.\")\n    }\n    \n\n    if (errorList.length < 1) {\n      AxiosRequest.put(`/coupons/updateCoupon`, newData)\n        .then(response => {\n          const updateUser = [...user];\n          const index = oldData.tableData.id;\n          updateUser[index] = newData;\n          setUser([...updateUser]);\n          resolve()\n          setIserror(false)\n          setErrorMessages([])\n        })\n        .catch(error => {\n          setErrorMessages([\"* There is no company with that id. Update failed.\"])\n          console.log(newData)\n          setIserror(true)\n          resolve()\n\n        })\n    } else {\n      setErrorMessages(errorList)\n      setIserror(true)\n      resolve()\n\n    }\n  }\n\n\n  //function for deleting a row\n  const handleRowDelete = (oldData, resolve) => {\n    AxiosRequest.delete(`/coupons/deleteCoupon/${oldData.id}`)\n      .then(response => {\n        const dataDelete = [...user];\n        const index = oldData.tableData.id;\n        dataDelete.splice(index, 1);\n        setUser([...dataDelete]);\n        resolve()\n      })\n      .catch(error => {\n        setErrorMessages([\"* Server error. Delete failed.\"])\n        setIserror(true)\n        resolve()\n      })\n  }\n\n\n  //function for adding a new row to the table\n  const handleRowAdd = (newData, resolve) => {\n    //validating the data inputs\n    let errorList = []\n      if (newData.id >=0 ) {\n        errorList.push(\"* Please leave the id field empty. Id's are given by the system.\")\n      }\n      if (newData.id === \"\") {\n          errorList.push(\"* You must fill the company id field.\")\n        }\n      if (newData.category === \"\") {\n        errorList.push(\"* Please fill the category field.\")\n      }\n      if (newData.title === \"\") {\n        errorList.push(\"* Please fill the title field.\")\n      }\n      if (newData.title.length < 3) {\n          errorList.push(\"* Title must be at least 3 notes long.\")\n        }\n      if (newData.description === \"\") {\n        errorList.push(\"* Please fill the description field.\")\n      }\n      if (newData.description.length < 3) {\n          errorList.push(\"* The description field must be at least 3 notes long.\")\n        }\n      if (newData.startDate === \"\" ) {\n        errorList.push(\"* Please fill the start-date field.\")\n      }\n      if (newData.endDate === \"\") {\n        errorList.push(\"* Please fill the end-date field.\")\n      }\n      if (newData.amount === \"\") {\n        errorList.push(\"* Please fill the amount field.\")\n      }\n      if (newData.amount < 0) {\n          errorList.push(\"* Amount can't be negative.\")\n        }\n      if (newData.price === \"\") {\n        errorList.push(\"* Please fill the price field.\")\n      }\n      if (newData.price < 0) {\n          errorList.push(\"* The price can't have a negative value.\")\n        }\n      if (newData.image === \"\") {\n        errorList.push(\"* Please fill the image field.\")\n      }\n\n    if (errorList.length < 1) {\n      //const response = await AxiosRequest.post<CompanyData>(\"/coupons/addCompany\",company); //the link was wrong\n      AxiosRequest.post(`/coupons/addCoupon`, newData)\n        .then(response => {\n          let newUserdata = [...user];\n          newUserdata.push(newData);\n          setUser(newUserdata);\n          resolve()\n          setErrorMessages([])\n          setIserror(false)\n        })\n        .catch(error => {\n          setErrorMessages([\"* Coupon's title is already taken by another coupon of your company/ coupon cannot be added to another company. Try again.\"])\n          setIserror(true)\n          resolve()\n        })\n    } else {\n      setErrorMessages(errorList)\n      setIserror(true)\n      resolve()\n    }\n  }\n\n  return (\n    <div className=\"SingleCompanyTable\">\n      <h1>Coupons management:</h1> <br /><br />\n\n      <MaterialTable\n        title=\"Company coupons:\"\n        columns={columns}\n        data={user}\n        options={{\n          headerStyle: { borderBottomColor: 'red', borderBottomWidth: '3px', fontFamily: 'verdana' },\n          actionsColumnIndex: -1\n        }}\n        editable={{\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve) => {\n              handleRowUpdate(newData, oldData, resolve);\n\n            }),\n          onRowAdd: (newData) =>\n            new Promise((resolve) => {\n              handleRowAdd(newData, resolve)\n            }),\n          onRowDelete: (oldData) =>\n            new Promise((resolve) => {\n              handleRowDelete(oldData, resolve)\n            }),\n        }}\n      />\n\n      <div>\n        {iserror &&\n          <Alert severity=\"error\">\n            <AlertTitle>ERROR</AlertTitle>\n            {errorMessages.map((msg, i) => {\n              return <div key={i}>{msg}</div>\n            })}\n          </Alert>\n        }\n      </div>\n\n    </div>\n  );\n}\n\nexport default SingleCompanyTable;\n","import React, { useEffect, useState } from 'react';\nimport MaterialTable from 'material-table';\nimport './SingleCustomerTable.css';\nimport axios from 'axios';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport AxiosRequest from '../../../axios/AxiosRequest';\n\n\n// regex for email validation\nconst validateEmail = (email) => {\n  const re = /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nconst SingleCustomerTable = () => {\n\n  const [user, setUser] = useState([]);\n  const [iserror, setIserror] = useState(false);\n  const [errorMessages, setErrorMessages] = useState([]);\n\n  let columns = [\n    { title: 'CouponId', field: 'id' },\n    { title: 'CompanyId', field: 'companyID' },\n    { title: 'Category', field: 'category' },\n    { title: 'Title', field: 'title' },\n    { title: 'Description', field: 'description' },\n    { title: 'StartDate', field: 'startDate' },\n    { title: 'EndDate', field: 'endDate' },\n    { title: 'Amount', field: 'amount' },\n    {title: \"Price\", field: \"price\",\n      customFilterAndSearch: (term, rowData) => rowData.price <= term,\n    },\n    { title: 'Image', field: 'image' }\n  ]\n\n  // let data = [\n  //   { name: 'manish', username: 'traptrick', email: 'themk85@gmail.com', phone: '9999999999', website: 'https://github.com/traptrick' }\n  // ]  \n\n  useEffect(() => {\n    AxiosRequest.get(`/coupons/getCouponsByCustomer`)\n      .then(res => {\n        const users = res.data;\n        setUser(users);\n        // console.log(users);\n      })\n  }, [])\n\n\n\n  //function for updating the existing row details\n  // const handleRowUpdate = (newData, oldData, resolve) => {\n  //   //validating the data inputs\n  //   let errorList = []\n  //   if (newData.companyId !== oldData.companyId) {\n  //     errorList.push(\"* You can't update the customer's id.\")\n  //   }\n  //   if (newData.firstName === \"\") {\n  //     errorList.push(\"* Please fill the first name field.\")\n  //   }\n  //   if (newData.firstName.length < 4) {\n  //     errorList.push(\"* First name must be at least 3 letters long.\")\n  //   }\n  //   if (newData.lastName === \"\") {\n  //     errorList.push(\"* Please fill the last name field.\")\n  //   }\n  //   if (newData.lastName.length < 4) {\n  //     errorList.push(\"* Last name must be at least 3 letters long.\")\n  //   }\n  //   if (newData.email === \"\" || validateEmail(newData.email) === false) {\n  //     errorList.push(\"* Please enter a valid email\")\n  //   }\n  //   if (newData.password.length < 10) {\n  //     errorList.push(\"* The password must be at least 10 notes long.\")\n  //   }\n    \n\n  //   if (errorList.length < 1) {\n  //     axios.post(`/coupons/updateCustomer`, newData)\n  //       .then(response => {\n  //         const updateUser = [...user];\n  //         const index = oldData.tableData.companyId;\n  //         updateUser[index] = newData;\n  //         setUser([...updateUser]);\n  //         resolve()\n  //         setIserror(false)\n  //         setErrorMessages([])\n  //       })\n  //       .catch(error => {\n  //         setErrorMessages([\"* There is no customer with that id. Update failed.\"])\n  //         setIserror(true)\n  //         resolve()\n\n  //       })\n  //   } else {\n  //     setErrorMessages(errorList)\n  //     setIserror(true)\n  //     resolve()\n\n  //   }\n  // }\n\n\n  //function for deleting a row\n  // const handleRowDelete = (oldData, resolve) => {\n  //   axios.delete(`/coupons/deleteCustomer/${oldData.customerId}`)\n  //     .then(response => {\n  //       const dataDelete = [...user];\n  //       const index = oldData.tableData.companyId;\n  //       dataDelete.splice(index, 1);\n  //       setUser([...dataDelete]);\n  //       resolve()\n  //     })\n  //     .catch(error => {\n  //       setErrorMessages([\"* Server error. Delete failed.\"])\n  //       setIserror(true)\n  //       resolve()\n  //     })\n  // }\n\n\n  //function for adding a new row to the table\n  // const handleRowAdd = (newData, resolve) => {\n  //   //validating the data inputs\n  //   let errorList = []\n  //   if (newData.companyId !== \"\") {\n  //     errorList.push(\"* Please don't fill the id field. Id's are given by the system.\")\n  //   }\n  //   if (newData.firstName === \"\") {\n  //     errorList.push(\"* Please fill the first name field.\")\n  //   }\n  //   if (newData.firstName.length < 4) {\n  //     errorList.push(\"* First name must be at least 3 notes long.\")\n  //   }\n  //   if (newData.lastName === \"\") {\n  //     errorList.push(\"* Please fill the last name field.\")\n  //   }\n  //   if (newData.lastName.length < 4) {\n  //     errorList.push(\"* Last name must be at least 3 notes long.\")\n  //   }\n  //   if (newData.email === \"\" || validateEmail(newData.email) === false) {\n  //     errorList.push(\"* Please enter a valid email.\")\n  //   }\n  //   if (newData.password < 10) {\n  //     errorList.push(\"* The password must be at least 10 notes long.\")\n  //   }\n\n  //   if (errorList.length < 1) {\n  //     axios.post(`/coupons/addCustomer`, newData)\n  //       .then(response => {\n  //         let newUserdata = [...user];\n  //         newUserdata.push(newData);\n  //         setUser(newUserdata);\n  //         resolve()\n  //         setErrorMessages([])\n  //         setIserror(false)\n  //       })\n  //       .catch(error => {\n  //         setErrorMessages([\"* Customer's email is already taken. Try again.\"])\n  //         setIserror(true)\n  //         resolve()\n  //       })\n  //   } else {\n  //     setErrorMessages(errorList)\n  //     setIserror(true)\n  //     resolve()\n  //   }\n  // }\n\n\n  return (\n    <div className=\"CustomerTable\">\n      <h1>My coupons:</h1> <br /><br />\n\n      <MaterialTable\n        title=\"My coupons:\"\n        columns={columns}\n        data={user}\n        options={{\n          headerStyle: { borderBottomColor: 'red', borderBottomWidth: '3px', fontFamily: 'verdana' },\n          actionsColumnIndex: -1\n        }}\n        // editable={{\n        //   // onRowUpdate: (newData, oldData) =>\n        //   //   new Promise((resolve) => {\n        //   //     handleRowUpdate(newData, oldData, resolve);\n\n        //   //   }),\n        //   onRowAdd: (newData) =>\n        //     new Promise((resolve) => {\n        //       handleRowAdd(newData, resolve)\n        //     }),\n        //   onRowDelete: (oldData) =>\n        //     new Promise((resolve) => {\n        //       handleRowDelete(oldData, resolve)\n        //     }),\n        // }}\n      />\n\n      <div>\n        {iserror &&\n          <Alert severity=\"error\">\n            <AlertTitle>ERROR</AlertTitle>\n            {errorMessages.map((msg, i) => {\n              return <div key={i}>{msg}</div>\n            })}\n          </Alert>\n        }\n      </div>\n\n    </div>\n  );\n}\n\nexport default SingleCustomerTable;\n","\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport SingleCoupon from \"../../../Coupons/SingleCoupon\";\nimport CustomerData from \"../../../Models/CustomerData\";\nimport CouponData from \"../../../Models/CouponData\";\nimport notify from \"../../../Services/Notify\";\nimport AxiosRequest from \"../../../../axios/AxiosRequest\";\n\n\nfunction GetCustomerCoupons(): JSX.Element {\n    const [coupons, setCoupons] = useState<CouponData[]>([]);\n\n    const {register, handleSubmit, errors} = useForm<CustomerData>();\n    //for sending the browser to specific location \n    const history = useHistory();\n\n    async function send(customer:CustomerData){\n        try{\n            //lecturer is in json mode, ready to send.....      \n    const { data : coupons } : { data : CouponData[] } = await AxiosRequest.get(`coupons/getCouponsByCustomer2/`+customer.id);\n    setCoupons(coupons);\n            notify.success(\"\");\n        } catch {\n            notify.error(\"Error\")\n        }\n    }\n       return (\n           <div className=\"GetCustomerCoupons Box\">\n               {coupons.map (item => <SingleCoupon key= {item.id} myCoupon={item}/>)}\n\t\t\t<h2>Get customer coupons:</h2>\n            <form onSubmit={handleSubmit(send)}>\n                <input type=\"number\" name=\"id\" placeholder=\"Customer's id\" ref={register({\n                    required: {value:true , message:\"Missing id.\"},\n                })}/>\n                <br/><br/>\n                <button>Get</button>\n            </form>\n        </div>\n       );\n   }\n   \n   export default GetCustomerCoupons;","import CouponData from \"./CouponData\";\n\nclass CustomerData{\n    id:number;\n    firstName:string;\n    lastName:string;\n    email:string;\n    password:string;\n    coupons?:CouponData[];\n\n}\nexport default CustomerData;","import { Component } from \"react\";\nimport \"./GetCustomerDetails.css\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport CompanyData from \"../../../Models/CompanyData\";\nimport CustomerData from \"../../../Models/CustomerData\";\nimport AxiosRequest from \"../../../../axios/AxiosRequest\";\n\ninterface GetCustomerDetailsState {\n    myCustomer:CustomerData;\n}\n\nclass GetCustomerDetails extends Component<{}, GetCustomerDetailsState> {\n\n    public constructor(props:{} ) {\n        super(props);\n        this.state = {            \n            myCustomer : new CustomerData  \n        };\n        \n    }\n\n    public render(): JSX.Element {\n        return (\n            <div className=\"GetCustomerDetails\">               \n                <div className=\"Box GetCustomerDetails\"> \n                            <h3>My details:</h3>\n                   ID: {this.state.myCustomer.id} <br/>  \n                   FIRST NAME: {this.state.myCustomer.firstName} <br/>\n                   LAST NAME: {this.state.myCustomer.lastName} <br/>\n                   EMAIL: {this.state.myCustomer.email} <br/>\n                </div>\n            </div>\n        );\n    }\n\n    public async componentDidMount(){\n        const result = await AxiosRequest.get(\"/coupons/getCustomerLoggedIn\");\n        const CustomerData = result.data;\n        console.log(CustomerData);\n        this.setState({\n            myCustomer : CustomerData\n        })\n    }\n}\n\nexport default GetCustomerDetails;","import AuthState from \"../../../../Redux/AuthState\";\nimport { CompanyState } from \"../../../../Redux/CompanyState\";\nimport SingleCompany from \"../../../Companies/SingleCompany\";\nimport AsideMenu from \"../../../LayoutArea/Aside/Aside\";\nimport SingleCompanyTable from \"../../../Tables/SingleCompanyTable/SingleCompanyTable\";\nimport \"./companyPage.css\";\n\nfunction companyPage(): JSX.Element {\n    return (\n        <div className=\"companyPage\">\n\t\t\t\n            <main>\n            <h1>Welcome company!</h1>\n            </main>\n        </div>\n    );\n}\n\nexport default companyPage;\n","import React from \"react\";\nimport AsideMenu from \"../../../LayoutArea/Aside/Aside\";\nimport \"./customerPage.css\";\nimport SingleCustomerTable from \"../../../Tables/SingleCustomerTable/SingleCustomerTable\";\n\nfunction customerPage(): JSX.Element {\n    return (\n        <div className=\"customerPage\">\n\t\t\t\n            <main>\n                <h1>Welcome customer!</h1>\n            </main>\n        </div>\n    );\n}\n\nexport default customerPage;\n","import AsideMenu from \"../../../LayoutArea/Aside/Aside\";\nimport Menu from \"../../../LayoutArea/Aside/Aside\";\nimport CompaniesTable from \"../../../Tables/CompaniesTable/CompaniesTable\";\nimport CustomersTable from \"../../../Tables/CustomersTable/CustomersTable\";\nimport \"./adminPage.css\";\n\nfunction adminPage(): JSX.Element {\n    return (\n        <div className=\"adminPage\">\n\t\t\t\n            <main>\n                <h1>Welcome admin!</h1>\n            </main>\n        </div>\n    );\n}\n\nexport default adminPage;\n","\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../../LayoutArea/Logo/Logo\";\nimport Routing from \"../../Routing/Routing\";\nimport \"./HomePage.css\"\n\n//import Discount from \"../Discount/Discount\"\n//import Special from \"../Specials/Special\"\n\nfunction HomePage():JSX.Element{\n    return(\n        <div className=\"HomePage\">\n            <h1>Welcome to our coupon website!</h1>\n            <h2>Your best place for purchasing coupons!</h2>  \n            <Link  to=\"/CouponStore\">\n                    <button className=\"btn btn-primary btn-s mx-5 \">Check all coupons ! </button>\n                    </Link>  \n        </div>\n    );\n}\n\nexport default HomePage;\n","import { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport store from \"../../../../../src/Redux/Store\";\r\nimport { LogoutAction } from \"../../../../Redux/AuthState\";\r\nimport notify from \"../../../Services/Notify\";\r\nimport Header from \"../Header\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {unAuthorize} from \"../../../../reduxToolkit/LoginSlice\";\r\n\r\n// const Logout = () => {\r\n//     localStorage.localStorage.clear();;\r\n//     history.push(\"/HomePage\");\r\n//   };\r\n\r\n\r\nfunction Logout(): JSX.Element {\r\n\r\n    // const dispatch = useDispatch();\r\n    // dispatch(unAuthorize());\r\n\r\n    // store.dispatch(LogoutAction());\r\n    //localStorage.clear();\r\n    //const history=useHistory();\r\n    // useEffect(()=>{\r\n    //     // store.dispatch(LogoutAction());\r\n    //     notify.success(\"You have logged-out successfully.\");\r\n    //     // history.push('');\r\n    // });\r\n    return (\r\n        <Header/>\r\n    );\r\n}\r\n\r\nexport default Logout;\r\n","import axios from \"axios\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport notify from \"../../../Services/Notify\";\r\nimport CouponData from \"../../../Models/CouponData\";\r\nimport \"./CouponPurchase.css\";\r\nimport CustomerData from \"../../../Models/CustomerData\";\r\nimport UserModel from \"../../../Models/UserModel\";\r\nimport AxiosRequest from \"../../../../axios/AxiosRequest\";\r\n\r\nfunction CouponPurchase(): JSX.Element {\r\n    const {register, handleSubmit, errors} = useForm<CouponData>();\r\n    //for sending the browser to specific location \r\n    const history = useHistory();\r\n\r\n    async function send(coupon:CouponData){\r\n        try{\r\n            const response = await AxiosRequest.post<CouponData>(\"coupons/purchaseCoupon/\"+coupon.id);\r\n            console.log(response.data);\r\n            notify.success(\"The coupon was successfully purchased!\");\r\n\r\n        } catch {\r\n            notify.error(\"The coupon was NOT purchased.\");\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"CouponPurchase Box\">\r\n\t\t\t<h2>Coupon Purchase</h2>\r\n            <form onSubmit={handleSubmit(send)}>\r\n                <input type=\"number\" name=\"id\" placeholder=\"Coupon's ID\" ref={register({\r\n                   required: {value:true , message:\"Please enter coupon id number.\"},\r\n                   min: {value:1, message:\"ID number can only be positive.\"}\r\n               })}/>\r\n               <span><br/>{errors.id?.message}</span>\r\n               <br/><br/>\r\n                <button>Purchase</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CouponPurchase;","import styled from 'styled-components';\r\n/*עיצוב קופסאות המוצרים */ /*עיצוב התמונה שבתוך הדיב  */\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  width: 90%;\r\n  border: 2px solid lightblue;\r\n  border-radius: 20px;\r\n  height: 100%;\r\n  button {\r\n    border-radius: 0 0 20px 20px;\r\n    background-color:white;\r\n  }\r\n  img {\r\n    max-height: 250px;\r\n    object-fit: cover;\r\n    border-radius: 20px 20px 0 0;\r\n    border: 1px solid red;\r\n  }\r\n  div {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    padding: 1rem;\r\n    height: 100%;\r\n    background-color:cyan;\r\n    \r\n  }\r\n`;/*background-color:yellow; */","import Button from '@material-ui/core/Button';\r\n// Types\r\nimport { CartItemType } from '../CouponStore/couponStore';\r\n// Styles\r\nimport { Wrapper } from './Item.styles';\r\n\r\ntype Props = {\r\n  item: CartItemType;\r\n  handleAddToCart: (clickedItem: CartItemType) => void;\r\n};\r\n\r\n// id:number;\r\n// companyID:number;\r\n// category:string;\r\n// title:string;\r\n// description:string;\r\n// startDate:string;\r\n// endDate:string;\r\n// amount:number;\r\n// price:number;\r\n// image:string;\r\n\r\nconst Item: React.FC<Props> = ({ item, handleAddToCart }) => (\r\n  <Wrapper>\r\n    <img src={item.image} alt={item.title} />\r\n    <div>\r\n      <h3>{item.title}</h3>{/*כותרת מודגש  */}\r\n      <p>{item.category}</p>\r\n      <p>{item.description}</p>\r\n      <p>End-Date:<br/>{item.endDate}</p>\r\n      <h3>₪{item.price}</h3>{/*מחיר מודגש  */}\r\n    </div>\r\n    <Button onClick={() => handleAddToCart(item)}>Add to cart</Button>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Item;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import Button  from \"@material-ui/core/Button\";\r\n//types: מגיע מה APP.tsx\r\nimport{CartItemType} from '../App'\r\n//STYLES' לייבא את הסטייל  \r\nimport { Wrapper } from './Item.stayles';\r\n\r\ntype Props={\r\n    item:CartItemType;\r\n    handelAddToCart:(clickedItem:CartItemType) => void; \r\n}\r\n//לריאקט פונקציית קומפוננטה נרשום FC\r\nconst Item:React.FC<Props> =({item, handelAddToCart})=>(\r\n    <Wrapper>\r\n        <img src={item.image} alt={item.title}/>\r\n        <div>\r\n            <h3>{item.title}</h3>\r\n            <p>{item.description}</p>\r\n            <h3>${item.price}</h3>\r\n        </div>\r\n        <Button onClick={() =>handelAddToCart(item)}>Add to cart</Button>\r\n    </Wrapper>\r\n)\r\n\r\nexport default Item;*/\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  border-bottom: 1px solid lightblue;\r\n  padding-bottom: 20px;\r\n  div {\r\n    flex: 1;\r\n  }\r\n  .information,\r\n  .buttons {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .deleteIcon {\r\n    font-size:2em;\r\n    color:#e60000;\r\n  }\r\n  .priceContainer {\r\n    font-size:1em;\r\n    align:center;\r\n    \r\n    text-align: center;\r\n  \r\n  }\r\n  img {\r\n    max-width: 80px;\r\n    object-fit: cover;\r\n    margin-left: 5px;\r\n  }\r\n`;","import Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n// Types\r\nimport { CartItemType } from '../CouponStore/couponStore';\r\n// Styles\r\nimport { Wrapper } from './CartItem.styles';\r\n//הפריטים שבחלון שנפתח בצד כאשר לוחצים על העגלה \r\n\r\n\r\ntype Props = {\r\n  item: CartItemType;\r\n  addToCart: (clickedItem: CartItemType) => void;\r\n  removeFromCart: (id: number) => void;\r\n};\r\n\r\nconst CartItem: React.FC<Props> = ({ item, addToCart, removeFromCart }) => (//הפונקציה מקבלת אייטם ופונק של הוספה והחסרה מעגלה\r\n  <Wrapper>\r\n    <div>\r\n    <div className='priceContainer' >\r\n      <h3>{item.title}</h3>\r\n      </div>\r\n      <div className='information'>\r\n        <div className='priceContainer' >\r\n          <p>Price: {item.price} ₪</p>\r\n          <p>Price: {item.image} </p>\r\n          </div>\r\n        {/*<p>Total: {(item.amount * item.price).toFixed(2)}₪</p>*/}{/**קבלת הסכום הטוטאלי עבור כמות מוצרים מאותו סוג */}\r\n        {/*toFixed ייתן לנו נק עשרונית 2מקומות אחורה ^*/}\r\n      </div>\r\n\r\n\r\n      {/*כפתורי מינוס פלוס פריטים שבתוך העגלה */}\r\n      <div className='buttons'>\r\n       {/* <Button\r\n          size='small'\r\n          disableElevation//כדי שלא יהיה צל \r\n          variant='contained'\r\n          onClick={() => removeFromCart(item.id)}\r\n        >\r\n          -\r\n        </Button>\r\n       <p>{item.amount}</p>*/}\r\n\r\n        <DeleteIcon className='deleteIcon'\r\n         onClick={() => removeFromCart(item.id)}\r\n       >\r\n       </DeleteIcon>\r\n        \r\n      </div>\r\n    </div>\r\n    <img className='imgInCart' src={item.image} alt={item.title} />{/*תמונה תהיה לפי נתומונה שתתקבל מהאייטם */}\r\n  </Wrapper>\r\n);\r\n\r\nexport default CartItem;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.aside`\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  width: 400px;\r\n  padding: 20px;\r\n\r\n .payCartBtn{\r\n   border:3px solid green;\r\n   text-align:center;\r\n   text-size:5em;\r\n }\r\n .CreditCardIcon{\r\n  font-size:2em;\r\n  color:green;\r\n }\r\n \r\n\r\n`;","import CartItem from '../CartItem/CartItem';\r\nimport { Wrapper } from './Cart.styles';\r\nimport { CartItemType } from '../CouponStore/couponStore';\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\nimport { Button, Icon } from '@material-ui/core';\r\nimport { CouponPurchase } from '../../Redux/CustomerState';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\ntype Props = {\r\n  cartItems: CartItemType[];//העגלה מקבלת מערך של מוצרים\r\n  addToCart: (clickedItem: CartItemType) => void;//הפונקציה הוספה לעגלה לא מחזירה כלום ולכן וויד\r\n  removeFromCart: (id: number) => void;//פונקציה שמקבלת תז מסוג מספר שזה יהיה התז של המוצר\r\n};\r\n\r\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart }) => {\r\n  //חישוב של סכום כל הפריטים בעגלה\r\n  const calculateTotal = (items: CartItemType[]) =>\r\n    items.reduce((ack: number, item) => ack + item.amount * item.price, 0);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h2>My Shopping Cart (: </h2>\r\n      {cartItems.length === 0 ? <p>No items in cart.</p> : null}{/*בדיקה אם העגלה ריקה תכתוב שאין פריטיםבמידה ויש אל תציג כלום */}\r\n      {cartItems.map(item => (\r\n        <CartItem\r\n          key={item.id}\r\n          item={item}\r\n          addToCart={addToCart}\r\n        removeFromCart={removeFromCart}\r\n        />\r\n      ))}\r\n     <div> <h2>Total Cart: {calculateTotal(cartItems).toFixed(2)} ₪</h2> {/*הצגת סכום כל פירטי העגלה */}</div>\r\n\r\n\r\n\r\n         {/* This Button uses a Font Icon, see the installation instructions in the Icon component docs. */}\r\n         <Link to=\"/CouponPurchase\">  {/* הוספת לינק שיפנה למסך הבית בלחיצה על לוגו */}\r\n         <Button className='payCartBtn'>\r\n      purchase coupons  <CreditCardIcon className='CreditCardIcon' >onClick={CouponPurchase}</CreditCardIcon>\r\n      </Button>\r\n             </Link>\r\n      \r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Cart;","import styled from 'styled-components';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport const Wrapper = styled.div`\r\n  margin: 5%;\r\n`;\r\n\r\nexport const StyledButton = styled(IconButton)`\r\n  position: fixed;\r\n  z-index: 100;\r\n  right: 120px;\r\n  top: 60px;\r\n  \r\n`;","import { useState } from 'react';\r\nimport { useQuery } from 'react-query';\r\n// Components\r\nimport Item from '../Item/Item';\r\nimport Cart from '../Cart/Cart';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport Badge from '@material-ui/core/Badge';\r\n// Styles\r\nimport { Wrapper, StyledButton } from '../App.styles';//כפתור סטייל מגיע מהעיצוב של האפ\r\n// Types\r\nexport type CartItemType = {\r\nid:number;\r\ncompanyID:number;\r\ncategory:string;\r\ntitle:string;\r\ndescription:string;\r\nstartDate:string;\r\nendDate:string;\r\namount:number;\r\nprice:number;\r\nimage:string;\r\n};\r\n\r\nconst getProducts = async (): Promise<CartItemType[]> =>\r\n  await (await fetch('/coupons/getAllCoupons')).json();\r\n//האוויט הראשטון זה לקריאה של האייפיאיי והאוויט השני שנמיר אותו לגייסון \r\nconst CouponStore = () => {\r\n  const [cartOpen, setCartOpen] = useState(false);// סט-עגלה-פתוחה הוא בוליאני\r\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\r\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\r\n    'products',\r\n    getProducts\r\n  );\r\n  console.log(data);\r\n/*פונקציהבעלת משתנה צובר מסוג מספר שיבפור את מס הפריטים בעגלה */\r\n  const getTotalItems = (items: CartItemType[]) =>\r\n    items.reduce((ack: number, item) => ack + item.amount, 0);//נוסיף למצבר כמות שיתאר את עמות הפריטים בעגלה ונאתחל ל0\r\n\r\n\r\n    /*הוספה של פריטים לעגלה */\r\n  const handleAddToCart = (clickedItem: CartItemType) => {\r\n    setCartItems(previous => {\r\n      // 1. Is the item already added in the cart?\r\n      //במידה והעגלה ריקה נוסיף את הפריט אליה,לעומת זאת אם היא כבר קיימת בעגלה \r\n      const isItemInCart = previous.find(item => item.id === clickedItem.id);//בדיקה האם הפריט שלחצתי עליו קיים בעגלה עי השוואה של שני האידי \r\n//find יחזיר לי אמת או שקר אם קיים במערך\r\n\r\n//בדיקה אם הפריט קיים בעגלה ************************\r\n      if (isItemInCart) {\r\n        return previous.map(item =>//פריוויוס הוא סטייט\r\n          item.id === clickedItem.id//האיידי שקיים בעגלה שווה לאידי של הפריט שנלחץ\r\n            ? { ...item, amount: item.amount }//שיניתי כך שבעצם יהיה ניתן להוסיף רק קופון 1 *******************\r\n            : item//אחרת נחזיר את הפריט כמו שהוא \r\n        );\r\n      }\r\n      // First time the item is added //זה מה שיקרה בלחיצה הראשונה \r\n      //נחזיר מערך עם כל הפריטים הקודמים שבעגלה,באמצעות ההעתקה,ונוסיף את הפריט למערך\r\n      return [...previous, { ...clickedItem, amount: 1 }];//נשתשמש בהעתקה על המצב הקודם \r\n    });\r\n  };\r\n\r\n  /*//בדיקה אם הפריט קיים בעגלה ************************\r\n      if (isItemInCart) {\r\n        return previous.map(item =>//פריוויוס הוא סטייט\r\n          item.id === clickedItem.id//האיידי שקיים בעגלה שווה לאידי של הפריט שנלחץ\r\n            ? { ...item, amount: item.amount + 1 }//יצירת ספרדאופרטור (מעתיק) לפריט הישן ,ניקח את הפרופרטי כמות ונאמר שהוא יהיה הכמות של הפריט ועוד אחד\r\n            : item//אחרת נחזיר את הפריט כמו שהוא \r\n        );\r\n      }\r\n      // First time the item is added //זה מה שיקרה בלחיצה הראשונה \r\n      //נחזיר מערך עם כל הפריטים הקודמים שבעגלה,באמצעות ההעתקה,ונוסיף את הפריט למערך\r\n      return [...previous, { ...clickedItem, amount: 1 }];//נשתשמש בהעתקה על המצב הקודם \r\n    });\r\n  };\r\n */\r\n\r\n\r\n\r\n  //טיפול במחיקת הפריט מהעגלה\r\n  const handleRemoveFromCart = (id: number) => {\r\n    setCartItems(prev =>//קריאה למצב האחרון שהיינו בו \r\n      prev.reduce((sum, item) => {\r\n        if (item.id === id) {//אם התז של הפריט שווה לתז של הארגומנט\r\n          if (item.amount === 1) return sum; \r\n          return [...sum, { ...item, amount: item.amount - 1 }];\r\n        } else {\r\n          return [...sum, item];\r\n        }\r\n      }, [] as CartItemType[])//מערך ריק מאותו סוג של מערך של פריטים בעגלה\r\n    );\r\n  };\r\n\r\n  if (isLoading) return <LinearProgress />;//בטעינה של המסך יציג קו כחול של התקדמות\r\n  if (error) return <div>Something went wrong ...</div>;//בשגיאה יצי הודעה\r\n\r\n  return (\r\n    <Wrapper>\r\n    <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}>\r\n      <Cart\r\n        cartItems={cartItems}\r\n        addToCart={handleAddToCart}\r\n        removeFromCart={handleRemoveFromCart}\r\n      />\r\n    </Drawer>\r\n    <StyledButton onClick={() => setCartOpen(true)}>{/*בלחיצת על כפתור העגלה תיפתח לתפריט */}\r\n      <Badge badgeContent={getTotalItems(cartItems)} color='error'>{/*Badge נותן תגית אדומה על עגלה לפי מס הפריטים ששלחנו אליה  */}\r\n        <AddShoppingCartIcon/>\r\n      </Badge>\r\n    </StyledButton>\r\n    <Grid container spacing={3}>\r\n      {data?.map(item => (\r\n        <Grid item key={item.id} xs={12} sm={4}>\r\n          <Item item={item} handleAddToCart={handleAddToCart} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  </Wrapper>\r\n  );\r\n};\r\n\r\nexport default CouponStore;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"../LayoutArea/Header/Login/Login\";\r\nimport AddCompany from \"../MainArea/AdminHome/AddCompany/AddCompany\";\r\nimport AddCustomer from \"../MainArea/AdminHome/AddCustomer/AddCustomer\";\r\nimport DeleteCompany from \"../MainArea/AdminHome/DeleteCompany/DeleteCompany\";\r\nimport DeleteCustomer from \"../MainArea/AdminHome/DeleteCustomer/DeleteCustomer\";\r\nimport GetAllCustomers from \"../MainArea/AdminHome/GetAllCompanies/GetAllCompanies\";\r\nimport GetAllCompanies from \"../MainArea/AdminHome/GetAllCompanies/GetAllCompanies\";\r\nimport GetOneCompany from \"../MainArea/AdminHome/GetOneCompany/GetOneCompany\";\r\nimport GetOneCustomer from \"../MainArea/AdminHome/GetOneCustomer/GetOneCustomer\";\r\nimport UpdateCompany from \"../MainArea/AdminHome/UpdateCompany/UpdateCompany\";\r\nimport UpdateCustomer from \"../MainArea/AdminHome/UpdateCustomer/UpdateCustomer\";\r\nimport AddCoupon from \"../MainArea/CompanyHome/AddCoupon/AddCoupon\";\r\nimport DeleteCoupon from \"../MainArea/CompanyHome/DeleteCoupon/DeleteCoupon\";\r\nimport GetCompanyCouponsByCategory from \"../MainArea/CompanyHome/GetCompanyCouponsByCategory/GetCompanyCouponsByCategory\";\r\nimport GetCompanyCouponsByMaxPrice from \"../MainArea/CompanyHome/GetCompanyCouponsByMaxPrice/GetCompanyCouponsByMaxPrice\";\r\nimport GetCompanyDetails from \"../MainArea/CompanyHome/GetCompanyDetails/GetCompanyDetails\";\r\nimport UpdateCoupon from \"../MainArea/CompanyHome/UpdateCoupon/UpdateCoupon\";\r\nimport Page404 from \"../Routing/Page404/Page404\";\r\nimport GetCompanyCoupons from \"../MainArea/AdminHome/GetCompanyCoupons/GetCompanyCoupons\";\r\nimport \"./Routing.css\";\r\nimport store from \"../../Redux/Store\";\r\nimport CustomersTable from \"../Tables/CustomersTable/CustomersTable\";\r\nimport CompaniesTable from \"../Tables/CompaniesTable/CompaniesTable\";\r\nimport MyPurchasedCoupons from \"../MainArea/CustomerHome/MyPurchasedCoupons/MyPurchasedCoupons\";\r\nimport SingleCompanyTable from \"../Tables/SingleCompanyTable/SingleCompanyTable\";\r\nimport SingleCustomerTable from \"../Tables/SingleCustomerTable/SingleCustomerTable\";\r\nimport GetCustomerCoupons from \"../MainArea/AdminHome/GetCustomerCoupons/GetCustomerCoupons\";\r\nimport GetCustomerDetails from \"../MainArea/CustomerHome/GetCustomerDetails/GetCustomerDetails\";\r\nimport companyPage from \"../MainArea/CompanyHome/companyPage/companyPage\";\r\nimport customerPage from \"../MainArea/CustomerHome/customerPage/customerPage\";\r\nimport adminPage from \"../MainArea/AdminHome/adminPage/adminPage\";\r\nimport HomePage from \"../MainArea/HomePage/HomePage\";\r\nimport Logout from \"../LayoutArea/Header/Logout/Logout\";\r\nimport CouponPurchase from \"../MainArea/CustomerHome/PurchaseCoupon/CouponPurchase\";\r\nimport CouponStore from \"../../CouponsCarts/CouponStore/couponStore\";\r\n\r\n\r\nfunction Routing(): JSX.Element {\r\n\r\n    return (\r\n        <div className=\"Routing\">          \r\n                <Route path=\"/Login\" component={Login} exact />\r\n                <Route path=\"/AddCompany\" component={AddCompany} exact />\r\n                <Route path=\"/UpdateCompany\" component={UpdateCompany} exact />\r\n                <Route path=\"/DeleteCompany\" component={DeleteCompany} exact />\r\n                <Route path=\"/GetOneCompany/\" component={GetOneCompany} exact />\r\n                <Route path=\"/GetAllCompanies\" component={GetAllCompanies} exact />\r\n                <Route path=\"/AddCustomer\" component={AddCustomer} exact />\r\n                <Route path=\"/UpdateCustomer\" component={UpdateCustomer} exact />\r\n                <Route path=\"/DeleteCustomer\" component={DeleteCustomer} exact />   \r\n                <Route path=\"/GetOneCustomer/:id\" component={GetOneCustomer} exact/>\r\n                <Route path=\"/GetAllCustomers\" component={GetAllCustomers} exact/>\r\n                <Route path=\"/AddCoupon\" component={AddCoupon} exact />\r\n                <Route path=\"/UpdateCoupon\" component={UpdateCoupon} exact />\r\n                <Route path=\"/DeleteCoupon\" component={DeleteCoupon} exact />\r\n                <Route path=\"/GetCompanyCoupons/\" component={GetCompanyCoupons} exact />\r\n                <Route path=\"/GetCompanyCouponsByCategory\" component={GetCompanyCouponsByCategory} exact />\r\n                <Route path=\"/GetCompanyCouponsByMaxPrice/\" component={GetCompanyCouponsByMaxPrice} exact />\r\n                <Route path=\"/GetCompanyDetails\" component={GetCompanyDetails} exact />\r\n               <Route path=\"/CouponPurchase\" component={CouponPurchase} exact />\r\n               <Route path=\"/CompaniesTable\" component={CompaniesTable} exact />\r\n               <Route path=\"/CustomersTable\" component={CustomersTable} exact />\r\n               <Route path=\"/MyPurchasedCoupons\" component={MyPurchasedCoupons} exact />\r\n               <Route path=\"/SingleCustomerTable\" component={SingleCustomerTable} exact />\r\n               <Route path=\"/SingleCompanyTable\" component={SingleCompanyTable} exact />\r\n               <Route path=\"/GetCustomerCoupons\" component={GetCustomerCoupons} exact/>\r\n               <Route path=\"/GetCustomerDetails\" component={GetCustomerDetails} exact/>\r\n               <Route path=\"/CompanyPage\" component={companyPage} exact/>\r\n               <Route path=\"/CustomerPage\" component={customerPage} exact/>\r\n               <Route path=\"/AdminPage\" component={adminPage} exact/>\r\n               <Route path=\"/Logout\" component={Logout} exact/>\r\n               <Route path=\"/CouponStore\" component={CouponStore} exact/>\r\n               <Route path=\"/\" component={HomePage} exact/>\r\n               {/* <Route path =\"/\" component={HomePage} exact /> */}\r\n               <Redirect from=\"/\" to=\"/\" exact />\r\n            {/* <Route component={Page404}/>  MUST BE LAST !!!!!!! */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routing;","import \"./Layout.css\";\nimport Header from \"../Header/Header\";\nimport AsideMenu from \"../Aside/Aside\";\nimport Copyright from \"../Footer/Footer\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Routing from \"../../Routing/Routing\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\n//func    name     return type\nfunction Layout():JSX.Element{ \n    //JSX.Element = The component UI\n    const client=new QueryClient(); //JSX.Element = The component UI\n    return (\n        <div className=\"Layout\">\n             <QueryClientProvider client={client}>\n            <BrowserRouter>\n                {/*<header>*/}\n                <Header/>\n                {/*</header>*/}\n                <main className=\"container\">\n                <Routing/>\n                {/* <CompaniesTable/>\n                <CustomerTable/> */}\n                </main>\n                   <Copyright/>\n            </BrowserRouter>\n            </QueryClientProvider>\n        </div>\n    );\n}\n\nexport default Layout;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Layout from './Components/LayoutArea/Layout/Layout';\nimport ConfigureStore from \"./reduxToolkit/StoreConfig\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={ConfigureStore}>\n          <Layout/>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}